
sprint 10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  0000198a  00001a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000198a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000443  0080013c  0080013c  00001a5a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000330  00000000  00000000  00001ad0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000043c2  00000000  00000000  00001e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cad  00000000  00000000  000061c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002977  00000000  00000000  00006e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b08  00000000  00000000  000097e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000a361  00000000  00000000  0000a2f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004386  00000000  00000000  00014651  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  000189d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000330b  00000000  00000000  00018c5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__ctors_end>
       4:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_1>
       8:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
       c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      10:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      14:	0c 94 19 03 	jmp	0x632	; 0x632 <__vector_5>
      18:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      1c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      20:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      24:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      28:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__vector_10>
      2c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      30:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      34:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      38:	0c 94 d9 01 	jmp	0x3b2	; 0x3b2 <__vector_14>
      3c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      40:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      44:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      48:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__vector_18>
      4c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      50:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      54:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      58:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      5c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      60:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      64:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>

00000068 <Font5x8>:
      68:	05 00 00 00 00 00 05 00 00 5f 00 00 05 00 07 00     ........._......
      78:	07 00 05 14 7f 14 7f 14 05 24 2a 7f 2a 12 05 23     .........$*.*..#
      88:	13 08 64 62 05 36 49 56 20 50 05 08 07 03 00 00     ..db.6IV P......
      98:	05 00 1c 22 41 00 05 00 41 22 1c 00 05 14 08 3e     ..."A...A".....>
      a8:	08 14 05 08 08 3e 08 08 05 00 b0 70 00 00 05 08     .....>.....p....
      b8:	08 08 08 08 05 00 60 60 00 00 05 20 10 08 04 02     ......``... ....
      c8:	05 3e 51 49 45 3e 05 00 42 7f 40 00 05 72 49 49     .>QIE>..B.@..rII
      d8:	49 46 05 21 41 49 4d 33 05 18 14 12 7f 10 05 27     IF.!AIM3.......'
      e8:	45 45 45 39 05 3c 4a 49 49 31 05 41 21 11 09 07     EEE9.<JII1.A!...
      f8:	05 36 49 49 49 36 05 46 49 49 29 1e 05 00 00 14     .6III6.FII).....
     108:	00 00 05 00 40 34 00 00 05 08 14 22 41 00 05 14     ....@4....."A...
     118:	14 14 14 14 05 41 22 14 08 00 05 02 01 59 09 06     .....A"......Y..
     128:	05 3e 41 5d 59 4e 05 7c 12 11 12 7c 05 7f 49 49     .>A]YN.|...|..II
     138:	49 36 05 3e 41 41 41 22 05 7f 41 41 41 3e 05 7f     I6.>AAA"..AAA>..
     148:	49 49 49 49 05 7f 09 09 09 09 05 3e 41 41 51 73     IIII.......>AAQs
     158:	05 7f 08 08 08 7f 05 00 41 7f 41 00 05 20 40 41     ........A.A.. @A
     168:	3f 01 05 7f 08 14 22 41 05 7f 40 40 40 40 05 7f     ?....."A..@@@@..
     178:	02 0c 02 7f 05 7f 04 08 10 7f 05 3e 41 41 41 3e     ...........>AAA>
     188:	05 7f 09 09 09 06 05 3e 41 51 21 5e 05 7f 09 19     .......>AQ!^....
     198:	29 46 05 26 49 49 49 32 05 01 01 7f 01 01 05 3f     )F.&III2.......?
     1a8:	40 40 40 3f 05 1f 20 40 20 1f 05 3f 40 38 40 3f     @@@?.. @ ..?@8@?
     1b8:	05 63 14 08 14 63 05 03 04 78 04 03 05 61 51 49     .c...c...x...aQI
     1c8:	45 43 05 00 7f 41 41 00 05 02 04 08 10 20 05 00     EC...AA...... ..
     1d8:	41 41 7f 00 05 04 02 01 02 04 05 40 40 40 40 40     AA.........@@@@@
     1e8:	05 07 0b 00 00 00 05 20 54 54 78 40 05 7f 28 44     ....... TTx@..(D
     1f8:	44 38 05 38 44 44 44 28 05 38 44 44 28 7f 05 38     D8.8DDD(.8DD(..8
     208:	54 54 54 18 05 00 08 7e 09 02 05 18 a4 a4 9c 78     TTT....~.......x
     218:	05 7f 08 04 04 78 05 00 44 7d 40 00 05 20 40 40     .....x..D}@.. @@
     228:	3d 00 05 7f 10 28 44 00 05 00 41 7f 40 00 05 7c     =....(D...A.@..|
     238:	04 78 04 78 05 7c 08 04 04 78 05 38 44 44 44 38     .x.x.|...x.8DDD8
     248:	05 fc 18 24 24 18 05 18 24 24 18 fc 05 7c 08 04     ...$$...$$...|..
     258:	04 08 05 48 54 54 54 24 05 04 04 3f 44 24 05 3c     ...HTTT$...?D$.<
     268:	40 40 20 7c 05 1c 20 40 20 1c 05 3c 40 30 40 3c     @@ |.. @ ..<@0@<
     278:	05 44 28 10 28 44 05 4c 90 90 90 7c 05 44 64 54     .D(.(D.L...|.DdT
     288:	4c 44 05 00 08 36 41 00 05 00 00 77 00 00 05 00     LD...6A....w....
     298:	41 36 08 00 05 04 02 04 08 04 05 00 7f 41 7f 00     A6...........A..

000002a8 <__ctors_end>:
     2a8:	11 24       	eor	r1, r1
     2aa:	1f be       	out	0x3f, r1	; 63
     2ac:	cf ef       	ldi	r28, 0xFF	; 255
     2ae:	d8 e0       	ldi	r29, 0x08	; 8
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	cd bf       	out	0x3d, r28	; 61

000002b4 <__do_copy_data>:
     2b4:	11 e0       	ldi	r17, 0x01	; 1
     2b6:	a0 e0       	ldi	r26, 0x00	; 0
     2b8:	b1 e0       	ldi	r27, 0x01	; 1
     2ba:	ea e8       	ldi	r30, 0x8A	; 138
     2bc:	f9 e1       	ldi	r31, 0x19	; 25
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <__do_copy_data+0x10>
     2c0:	05 90       	lpm	r0, Z+
     2c2:	0d 92       	st	X+, r0
     2c4:	ac 33       	cpi	r26, 0x3C	; 60
     2c6:	b1 07       	cpc	r27, r17
     2c8:	d9 f7       	brne	.-10     	; 0x2c0 <__do_copy_data+0xc>

000002ca <__do_clear_bss>:
     2ca:	25 e0       	ldi	r18, 0x05	; 5
     2cc:	ac e3       	ldi	r26, 0x3C	; 60
     2ce:	b1 e0       	ldi	r27, 0x01	; 1
     2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <.do_clear_bss_start>

000002d2 <.do_clear_bss_loop>:
     2d2:	1d 92       	st	X+, r1

000002d4 <.do_clear_bss_start>:
     2d4:	af 37       	cpi	r26, 0x7F	; 127
     2d6:	b2 07       	cpc	r27, r18
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <.do_clear_bss_loop>
     2da:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <main>
     2de:	0c 94 c3 0c 	jmp	0x1986	; 0x1986 <_exit>

000002e2 <__bad_interrupt>:
     2e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002e6 <__vector_10>:
// Função para recepção de um frame de 5 a 8bits
unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Lê o dado recebido e retorna
}
     2e6:	1f 92       	push	r1
     2e8:	0f 92       	push	r0
     2ea:	0f b6       	in	r0, 0x3f	; 63
     2ec:	0f 92       	push	r0
     2ee:	11 24       	eor	r1, r1
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	2f 93       	push	r18
     2f6:	3f 93       	push	r19
     2f8:	4f 93       	push	r20
     2fa:	5f 93       	push	r21
     2fc:	6f 93       	push	r22
     2fe:	7f 93       	push	r23
     300:	8f 93       	push	r24
     302:	9f 93       	push	r25
     304:	af 93       	push	r26
     306:	bf 93       	push	r27
     308:	ef 93       	push	r30
     30a:	ff 93       	push	r31
     30c:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     310:	86 ff       	sbrs	r24, 6
     312:	0f c0       	rjmp	.+30     	; 0x332 <__vector_10+0x4c>
     314:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     318:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     31c:	a0 e0       	ldi	r26, 0x00	; 0
     31e:	b0 e0       	ldi	r27, 0x00	; 0
     320:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <tempo_borda_subida>
     324:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <tempo_borda_subida+0x1>
     328:	a0 93 72 01 	sts	0x0172, r26	; 0x800172 <tempo_borda_subida+0x2>
     32c:	b0 93 73 01 	sts	0x0173, r27	; 0x800173 <tempo_borda_subida+0x3>
     330:	27 c0       	rjmp	.+78     	; 0x380 <__vector_10+0x9a>
     332:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     336:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     33a:	cb 01       	movw	r24, r22
     33c:	a0 e0       	ldi	r26, 0x00	; 0
     33e:	b0 e0       	ldi	r27, 0x00	; 0
     340:	00 91 70 01 	lds	r16, 0x0170	; 0x800170 <tempo_borda_subida>
     344:	10 91 71 01 	lds	r17, 0x0171	; 0x800171 <tempo_borda_subida+0x1>
     348:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <tempo_borda_subida+0x2>
     34c:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <tempo_borda_subida+0x3>
     350:	80 1b       	sub	r24, r16
     352:	91 0b       	sbc	r25, r17
     354:	a2 0b       	sbc	r26, r18
     356:	b3 0b       	sbc	r27, r19
     358:	bc 01       	movw	r22, r24
     35a:	cd 01       	movw	r24, r26
     35c:	66 0f       	add	r22, r22
     35e:	77 1f       	adc	r23, r23
     360:	88 1f       	adc	r24, r24
     362:	99 1f       	adc	r25, r25
     364:	66 0f       	add	r22, r22
     366:	77 1f       	adc	r23, r23
     368:	88 1f       	adc	r24, r24
     36a:	99 1f       	adc	r25, r25
     36c:	2a e3       	ldi	r18, 0x3A	; 58
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	40 e0       	ldi	r20, 0x00	; 0
     372:	50 e0       	ldi	r21, 0x00	; 0
     374:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     378:	30 93 75 01 	sts	0x0175, r19	; 0x800175 <distancia_sonar_cm+0x1>
     37c:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <distancia_sonar_cm>
     380:	e1 e8       	ldi	r30, 0x81	; 129
     382:	f0 e0       	ldi	r31, 0x00	; 0
     384:	90 81       	ld	r25, Z
     386:	80 e4       	ldi	r24, 0x40	; 64
     388:	89 27       	eor	r24, r25
     38a:	80 83       	st	Z, r24
     38c:	ff 91       	pop	r31
     38e:	ef 91       	pop	r30
     390:	bf 91       	pop	r27
     392:	af 91       	pop	r26
     394:	9f 91       	pop	r25
     396:	8f 91       	pop	r24
     398:	7f 91       	pop	r23
     39a:	6f 91       	pop	r22
     39c:	5f 91       	pop	r21
     39e:	4f 91       	pop	r20
     3a0:	3f 91       	pop	r19
     3a2:	2f 91       	pop	r18
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	0f 90       	pop	r0
     3aa:	0f be       	out	0x3f, r0	; 63
     3ac:	0f 90       	pop	r0
     3ae:	1f 90       	pop	r1
     3b0:	18 95       	reti

000003b2 <__vector_14>:
     3b2:	1f 92       	push	r1
     3b4:	0f 92       	push	r0
     3b6:	0f b6       	in	r0, 0x3f	; 63
     3b8:	0f 92       	push	r0
     3ba:	11 24       	eor	r1, r1
     3bc:	2f 93       	push	r18
     3be:	3f 93       	push	r19
     3c0:	4f 93       	push	r20
     3c2:	5f 93       	push	r21
     3c4:	6f 93       	push	r22
     3c6:	7f 93       	push	r23
     3c8:	8f 93       	push	r24
     3ca:	9f 93       	push	r25
     3cc:	af 93       	push	r26
     3ce:	bf 93       	push	r27
     3d0:	40 91 6d 01 	lds	r20, 0x016D	; 0x80016d <tempo_ms>
     3d4:	50 91 6e 01 	lds	r21, 0x016E	; 0x80016e <tempo_ms+0x1>
     3d8:	4f 5f       	subi	r20, 0xFF	; 255
     3da:	5f 4f       	sbci	r21, 0xFF	; 255
     3dc:	50 93 6e 01 	sts	0x016E, r21	; 0x80016e <tempo_ms+0x1>
     3e0:	40 93 6d 01 	sts	0x016D, r20	; 0x80016d <tempo_ms>
     3e4:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <TEMPO_100us>
     3e8:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <TEMPO_100us+0x1>
     3ec:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <TEMPO_100us+0x2>
     3f0:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <TEMPO_100us+0x3>
     3f4:	01 96       	adiw	r24, 0x01	; 1
     3f6:	a1 1d       	adc	r26, r1
     3f8:	b1 1d       	adc	r27, r1
     3fa:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <TEMPO_100us>
     3fe:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <TEMPO_100us+0x1>
     402:	a0 93 67 01 	sts	0x0167, r26	; 0x800167 <TEMPO_100us+0x2>
     406:	b0 93 68 01 	sts	0x0168, r27	; 0x800168 <TEMPO_100us+0x3>
     40a:	9a 01       	movw	r18, r20
     40c:	36 95       	lsr	r19
     40e:	27 95       	ror	r18
     410:	36 95       	lsr	r19
     412:	27 95       	ror	r18
     414:	ab e7       	ldi	r26, 0x7B	; 123
     416:	b4 e1       	ldi	r27, 0x14	; 20
     418:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <__umulhisi3>
     41c:	96 95       	lsr	r25
     41e:	87 95       	ror	r24
     420:	64 e6       	ldi	r22, 0x64	; 100
     422:	68 9f       	mul	r22, r24
     424:	90 01       	movw	r18, r0
     426:	69 9f       	mul	r22, r25
     428:	30 0d       	add	r19, r0
     42a:	11 24       	eor	r1, r1
     42c:	42 17       	cp	r20, r18
     42e:	53 07       	cpc	r21, r19
     430:	31 f4       	brne	.+12     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	90 93 42 01 	sts	0x0142, r25	; 0x800142 <flag_150ms+0x1>
     43a:	80 93 41 01 	sts	0x0141, r24	; 0x800141 <flag_150ms>
     43e:	9a 01       	movw	r18, r20
     440:	36 95       	lsr	r19
     442:	27 95       	ror	r18
     444:	36 95       	lsr	r19
     446:	27 95       	ror	r18
     448:	a5 ec       	ldi	r26, 0xC5	; 197
     44a:	b0 e2       	ldi	r27, 0x20	; 32
     44c:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <__umulhisi3>
     450:	92 95       	swap	r25
     452:	82 95       	swap	r24
     454:	8f 70       	andi	r24, 0x0F	; 15
     456:	89 27       	eor	r24, r25
     458:	9f 70       	andi	r25, 0x0F	; 15
     45a:	89 27       	eor	r24, r25
     45c:	64 ef       	ldi	r22, 0xF4	; 244
     45e:	71 e0       	ldi	r23, 0x01	; 1
     460:	86 9f       	mul	r24, r22
     462:	90 01       	movw	r18, r0
     464:	87 9f       	mul	r24, r23
     466:	30 0d       	add	r19, r0
     468:	96 9f       	mul	r25, r22
     46a:	30 0d       	add	r19, r0
     46c:	11 24       	eor	r1, r1
     46e:	42 17       	cp	r20, r18
     470:	53 07       	cpc	r21, r19
     472:	19 f4       	brne	.+6      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <flag_500ms>
     47a:	bf 91       	pop	r27
     47c:	af 91       	pop	r26
     47e:	9f 91       	pop	r25
     480:	8f 91       	pop	r24
     482:	7f 91       	pop	r23
     484:	6f 91       	pop	r22
     486:	5f 91       	pop	r21
     488:	4f 91       	pop	r20
     48a:	3f 91       	pop	r19
     48c:	2f 91       	pop	r18
     48e:	0f 90       	pop	r0
     490:	0f be       	out	0x3f, r0	; 63
     492:	0f 90       	pop	r0
     494:	1f 90       	pop	r1
     496:	18 95       	reti

00000498 <__vector_1>:
     498:	1f 92       	push	r1
     49a:	0f 92       	push	r0
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	0f 92       	push	r0
     4a0:	11 24       	eor	r1, r1
     4a2:	8f 92       	push	r8
     4a4:	9f 92       	push	r9
     4a6:	af 92       	push	r10
     4a8:	bf 92       	push	r11
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	2f 93       	push	r18
     4b4:	3f 93       	push	r19
     4b6:	4f 93       	push	r20
     4b8:	5f 93       	push	r21
     4ba:	6f 93       	push	r22
     4bc:	7f 93       	push	r23
     4be:	8f 93       	push	r24
     4c0:	9f 93       	push	r25
     4c2:	af 93       	push	r26
     4c4:	bf 93       	push	r27
     4c6:	ef 93       	push	r30
     4c8:	ff 93       	push	r31
     4ca:	4f 9b       	sbis	0x09, 7	; 9
     4cc:	99 c0       	rjmp	.+306    	; 0x600 <__vector_1+0x168>
     4ce:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <N_voltas_pneu>
     4d2:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <N_voltas_pneu+0x1>
     4d6:	01 96       	adiw	r24, 0x01	; 1
     4d8:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <N_voltas_pneu+0x1>
     4dc:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <N_voltas_pneu>
     4e0:	c0 90 65 01 	lds	r12, 0x0165	; 0x800165 <TEMPO_100us>
     4e4:	d0 90 66 01 	lds	r13, 0x0166	; 0x800166 <TEMPO_100us+0x1>
     4e8:	e0 90 67 01 	lds	r14, 0x0167	; 0x800167 <TEMPO_100us+0x2>
     4ec:	f0 90 68 01 	lds	r15, 0x0168	; 0x800168 <TEMPO_100us+0x3>
     4f0:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <TEMPO_100us_anterior>
     4f4:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <TEMPO_100us_anterior+0x1>
     4f8:	a0 91 63 01 	lds	r26, 0x0163	; 0x800163 <TEMPO_100us_anterior+0x2>
     4fc:	b0 91 64 01 	lds	r27, 0x0164	; 0x800164 <TEMPO_100us_anterior+0x3>
     500:	a7 01       	movw	r20, r14
     502:	96 01       	movw	r18, r12
     504:	28 1b       	sub	r18, r24
     506:	39 0b       	sbc	r19, r25
     508:	4a 0b       	sbc	r20, r26
     50a:	5b 0b       	sbc	r21, r27
     50c:	20 93 59 01 	sts	0x0159, r18	; 0x800159 <delta_t>
     510:	30 93 5a 01 	sts	0x015A, r19	; 0x80015a <delta_t+0x1>
     514:	40 93 5b 01 	sts	0x015B, r20	; 0x80015b <delta_t+0x2>
     518:	50 93 5c 01 	sts	0x015C, r21	; 0x80015c <delta_t+0x3>
     51c:	60 ec       	ldi	r22, 0xC0	; 192
     51e:	77 e2       	ldi	r23, 0x27	; 39
     520:	89 e0       	ldi	r24, 0x09	; 9
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     528:	49 01       	movw	r8, r18
     52a:	5a 01       	movw	r10, r20
     52c:	20 93 5d 01 	sts	0x015D, r18	; 0x80015d <RPM>
     530:	30 93 5e 01 	sts	0x015E, r19	; 0x80015e <RPM+0x1>
     534:	40 93 5f 01 	sts	0x015F, r20	; 0x80015f <RPM+0x2>
     538:	50 93 60 01 	sts	0x0160, r21	; 0x800160 <RPM+0x3>
     53c:	c0 92 61 01 	sts	0x0161, r12	; 0x800161 <TEMPO_100us_anterior>
     540:	d0 92 62 01 	sts	0x0162, r13	; 0x800162 <TEMPO_100us_anterior+0x1>
     544:	e0 92 63 01 	sts	0x0163, r14	; 0x800163 <TEMPO_100us_anterior+0x2>
     548:	f0 92 64 01 	sts	0x0164, r15	; 0x800164 <TEMPO_100us_anterior+0x3>
     54c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     550:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     55c:	23 e2       	ldi	r18, 0x23	; 35
     55e:	30 e1       	ldi	r19, 0x10	; 16
     560:	49 e4       	ldi	r20, 0x49	; 73
     562:	50 e4       	ldi	r21, 0x40	; 64
     564:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     568:	6b 01       	movw	r12, r22
     56a:	7c 01       	movw	r14, r24
     56c:	c5 01       	movw	r24, r10
     56e:	b4 01       	movw	r22, r8
     570:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     574:	a7 01       	movw	r20, r14
     576:	96 01       	movw	r18, r12
     578:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	40 ec       	ldi	r20, 0xC0	; 192
     582:	50 e4       	ldi	r21, 0x40	; 64
     584:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e4       	ldi	r19, 0x40	; 64
     58c:	4c e1       	ldi	r20, 0x1C	; 28
     58e:	56 e4       	ldi	r21, 0x46	; 70
     590:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__divsf3>
     594:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixunssfsi>
     598:	60 93 69 01 	sts	0x0169, r22	; 0x800169 <vel_carro>
     59c:	70 93 6a 01 	sts	0x016A, r23	; 0x80016a <vel_carro+0x1>
     5a0:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <vel_carro+0x2>
     5a4:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <vel_carro+0x3>
     5a8:	60 91 51 01 	lds	r22, 0x0151	; 0x800151 <dist_anterior>
     5ac:	70 91 52 01 	lds	r23, 0x0152	; 0x800152 <dist_anterior+0x1>
     5b0:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <dist_anterior+0x2>
     5b4:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <dist_anterior+0x3>
     5b8:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     5bc:	a7 01       	movw	r20, r14
     5be:	96 01       	movw	r18, r12
     5c0:	0e 94 36 0a 	call	0x146c	; 0x146c <__addsf3>
     5c4:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixunssfsi>
     5c8:	60 93 51 01 	sts	0x0151, r22	; 0x800151 <dist_anterior>
     5cc:	70 93 52 01 	sts	0x0152, r23	; 0x800152 <dist_anterior+0x1>
     5d0:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <dist_anterior+0x2>
     5d4:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <dist_anterior+0x3>
     5d8:	20 ea       	ldi	r18, 0xA0	; 160
     5da:	36 e8       	ldi	r19, 0x86	; 134
     5dc:	41 e0       	ldi	r20, 0x01	; 1
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     5e4:	ba 01       	movw	r22, r20
     5e6:	a9 01       	movw	r20, r18
     5e8:	40 93 55 01 	sts	0x0155, r20	; 0x800155 <dist_km>
     5ec:	50 93 56 01 	sts	0x0156, r21	; 0x800156 <dist_km+0x1>
     5f0:	60 93 57 01 	sts	0x0157, r22	; 0x800157 <dist_km+0x2>
     5f4:	70 93 58 01 	sts	0x0158, r23	; 0x800158 <dist_km+0x3>
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	0e 94 a6 0c 	call	0x194c	; 0x194c <eeprom_write_dword>
     600:	ff 91       	pop	r31
     602:	ef 91       	pop	r30
     604:	bf 91       	pop	r27
     606:	af 91       	pop	r26
     608:	9f 91       	pop	r25
     60a:	8f 91       	pop	r24
     60c:	7f 91       	pop	r23
     60e:	6f 91       	pop	r22
     610:	5f 91       	pop	r21
     612:	4f 91       	pop	r20
     614:	3f 91       	pop	r19
     616:	2f 91       	pop	r18
     618:	ff 90       	pop	r15
     61a:	ef 90       	pop	r14
     61c:	df 90       	pop	r13
     61e:	cf 90       	pop	r12
     620:	bf 90       	pop	r11
     622:	af 90       	pop	r10
     624:	9f 90       	pop	r9
     626:	8f 90       	pop	r8
     628:	0f 90       	pop	r0
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	0f 90       	pop	r0
     62e:	1f 90       	pop	r1
     630:	18 95       	reti

00000632 <__vector_5>:
     632:	1f 92       	push	r1
     634:	0f 92       	push	r0
     636:	0f b6       	in	r0, 0x3f	; 63
     638:	0f 92       	push	r0
     63a:	11 24       	eor	r1, r1
     63c:	2f 93       	push	r18
     63e:	3f 93       	push	r19
     640:	4f 93       	push	r20
     642:	5f 93       	push	r21
     644:	6f 93       	push	r22
     646:	7f 93       	push	r23
     648:	8f 93       	push	r24
     64a:	9f 93       	push	r25
     64c:	af 93       	push	r26
     64e:	bf 93       	push	r27
     650:	ef 93       	push	r30
     652:	ff 93       	push	r31
     654:	4c 99       	sbic	0x09, 4	; 9
     656:	0e c0       	rjmp	.+28     	; 0x674 <__vector_5+0x42>
     658:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     65c:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     660:	6f 5f       	subi	r22, 0xFF	; 255
     662:	7f 4f       	sbci	r23, 0xFF	; 255
     664:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     668:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
     66c:	84 e0       	ldi	r24, 0x04	; 4
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	0e 94 98 0c 	call	0x1930	; 0x1930 <eeprom_write_byte>
     674:	4d 99       	sbic	0x09, 5	; 9
     676:	0e c0       	rjmp	.+28     	; 0x694 <__vector_5+0x62>
     678:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     67c:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     680:	61 50       	subi	r22, 0x01	; 1
     682:	71 09       	sbc	r23, r1
     684:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     688:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
     68c:	84 e0       	ldi	r24, 0x04	; 4
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	0e 94 98 0c 	call	0x1930	; 0x1930 <eeprom_write_byte>
     694:	ff 91       	pop	r31
     696:	ef 91       	pop	r30
     698:	bf 91       	pop	r27
     69a:	af 91       	pop	r26
     69c:	9f 91       	pop	r25
     69e:	8f 91       	pop	r24
     6a0:	7f 91       	pop	r23
     6a2:	6f 91       	pop	r22
     6a4:	5f 91       	pop	r21
     6a6:	4f 91       	pop	r20
     6a8:	3f 91       	pop	r19
     6aa:	2f 91       	pop	r18
     6ac:	0f 90       	pop	r0
     6ae:	0f be       	out	0x3f, r0	; 63
     6b0:	0f 90       	pop	r0
     6b2:	1f 90       	pop	r1
     6b4:	18 95       	reti

000006b6 <leitura_sensores_ADC>:
     6b6:	4f 92       	push	r4
     6b8:	5f 92       	push	r5
     6ba:	6f 92       	push	r6
     6bc:	7f 92       	push	r7
     6be:	8f 92       	push	r8
     6c0:	9f 92       	push	r9
     6c2:	af 92       	push	r10
     6c4:	bf 92       	push	r11
     6c6:	cf 92       	push	r12
     6c8:	df 92       	push	r13
     6ca:	ef 92       	push	r14
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	e9 01       	movw	r28, r18
     6d8:	fc 01       	movw	r30, r24
     6da:	30 81       	ld	r19, Z
     6dc:	33 23       	and	r19, r19
     6de:	09 f4       	brne	.+2      	; 0x6e2 <leitura_sensores_ADC+0x2c>
     6e0:	e5 c0       	rjmp	.+458    	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
     6e2:	5a 01       	movw	r10, r20
     6e4:	6b 01       	movw	r12, r22
     6e6:	4c 01       	movw	r8, r24
     6e8:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <cont_canal.2602>
     6ec:	81 30       	cpi	r24, 0x01	; 1
     6ee:	c9 f0       	breq	.+50     	; 0x722 <leitura_sensores_ADC+0x6c>
     6f0:	30 f0       	brcs	.+12     	; 0x6fe <leitura_sensores_ADC+0x48>
     6f2:	82 30       	cpi	r24, 0x02	; 2
     6f4:	69 f1       	breq	.+90     	; 0x750 <leitura_sensores_ADC+0x9a>
     6f6:	83 30       	cpi	r24, 0x03	; 3
     6f8:	09 f4       	brne	.+2      	; 0x6fc <leitura_sensores_ADC+0x46>
     6fa:	87 c0       	rjmp	.+270    	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     6fc:	d0 c0       	rjmp	.+416    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     6fe:	80 e4       	ldi	r24, 0x40	; 64
     700:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     704:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     708:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     70c:	96 95       	lsr	r25
     70e:	87 95       	ror	r24
     710:	96 95       	lsr	r25
     712:	87 95       	ror	r24
     714:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <acelerador+0x1>
     718:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <acelerador>
     71c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     720:	be c0       	rjmp	.+380    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     722:	81 e4       	ldi	r24, 0x41	; 65
     724:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     728:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     72c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     738:	2d e0       	ldi	r18, 0x0D	; 13
     73a:	32 e3       	ldi	r19, 0x32	; 50
     73c:	48 ec       	ldi	r20, 0xC8	; 200
     73e:	5d e3       	ldi	r21, 0x3D	; 61
     740:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     744:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixunssfsi>
     748:	f5 01       	movw	r30, r10
     74a:	71 83       	std	Z+1, r23	; 0x01
     74c:	60 83       	st	Z, r22
     74e:	a7 c0       	rjmp	.+334    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     750:	82 e4       	ldi	r24, 0x42	; 66
     752:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     756:	08 e7       	ldi	r16, 0x78	; 120
     758:	10 e0       	ldi	r17, 0x00	; 0
     75a:	f8 01       	movw	r30, r16
     75c:	60 81       	ld	r22, Z
     75e:	71 81       	ldd	r23, Z+1	; 0x01
     760:	80 e0       	ldi	r24, 0x00	; 0
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     768:	2a e0       	ldi	r18, 0x0A	; 10
     76a:	38 e2       	ldi	r19, 0x28	; 40
     76c:	40 ea       	ldi	r20, 0xA0	; 160
     76e:	5b e3       	ldi	r21, 0x3B	; 59
     770:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	4a e7       	ldi	r20, 0x7A	; 122
     77a:	54 e4       	ldi	r21, 0x44	; 68
     77c:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     780:	2b 01       	movw	r4, r22
     782:	3c 01       	movw	r6, r24
     784:	f8 01       	movw	r30, r16
     786:	60 81       	ld	r22, Z
     788:	71 81       	ldd	r23, Z+1	; 0x01
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     792:	2a e0       	ldi	r18, 0x0A	; 10
     794:	38 e2       	ldi	r19, 0x28	; 40
     796:	40 ea       	ldi	r20, 0xA0	; 160
     798:	5b e3       	ldi	r21, 0x3B	; 59
     79a:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     79e:	9b 01       	movw	r18, r22
     7a0:	ac 01       	movw	r20, r24
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	80 ea       	ldi	r24, 0xA0	; 160
     7a8:	90 e4       	ldi	r25, 0x40	; 64
     7aa:	0e 94 35 0a 	call	0x146a	; 0x146a <__subsf3>
     7ae:	9b 01       	movw	r18, r22
     7b0:	ac 01       	movw	r20, r24
     7b2:	c3 01       	movw	r24, r6
     7b4:	b2 01       	movw	r22, r4
     7b6:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__divsf3>
     7ba:	26 e6       	ldi	r18, 0x66	; 102
     7bc:	36 e6       	ldi	r19, 0x66	; 102
     7be:	46 e2       	ldi	r20, 0x26	; 38
     7c0:	50 e4       	ldi	r21, 0x40	; 64
     7c2:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	42 e8       	ldi	r20, 0x82	; 130
     7cc:	53 e4       	ldi	r21, 0x43	; 67
     7ce:	0e 94 35 0a 	call	0x146a	; 0x146a <__subsf3>
     7d2:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixunssfsi>
     7d6:	f6 01       	movw	r30, r12
     7d8:	71 83       	std	Z+1, r23	; 0x01
     7da:	60 83       	st	Z, r22
     7dc:	20 91 3d 01 	lds	r18, 0x013D	; 0x80013d <cont_temp.2603>
     7e0:	21 11       	cpse	r18, r1
     7e2:	06 c0       	rjmp	.+12     	; 0x7f0 <leitura_sensores_ADC+0x13a>
     7e4:	79 83       	std	Y+1, r23	; 0x01
     7e6:	68 83       	st	Y, r22
     7e8:	2f 5f       	subi	r18, 0xFF	; 255
     7ea:	20 93 3d 01 	sts	0x013D, r18	; 0x80013d <cont_temp.2603>
     7ee:	07 c0       	rjmp	.+14     	; 0x7fe <leitura_sensores_ADC+0x148>
     7f0:	28 81       	ld	r18, Y
     7f2:	39 81       	ldd	r19, Y+1	; 0x01
     7f4:	26 17       	cp	r18, r22
     7f6:	37 07       	cpc	r19, r23
     7f8:	10 f4       	brcc	.+4      	; 0x7fe <leitura_sensores_ADC+0x148>
     7fa:	79 83       	std	Y+1, r23	; 0x01
     7fc:	68 83       	st	Y, r22
     7fe:	68 81       	ld	r22, Y
     800:	86 e0       	ldi	r24, 0x06	; 6
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	0e 94 98 0c 	call	0x1930	; 0x1930 <eeprom_write_byte>
     808:	4a c0       	rjmp	.+148    	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     80a:	83 e4       	ldi	r24, 0x43	; 67
     80c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     810:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     814:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     818:	80 e0       	ldi	r24, 0x00	; 0
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	0e 94 43 0b 	call	0x1686	; 0x1686 <__floatunsisf>
     820:	2a e0       	ldi	r18, 0x0A	; 10
     822:	38 e2       	ldi	r19, 0x28	; 40
     824:	40 ea       	ldi	r20, 0xA0	; 160
     826:	5b e3       	ldi	r21, 0x3B	; 59
     828:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     82c:	21 e7       	ldi	r18, 0x71	; 113
     82e:	3d e3       	ldi	r19, 0x3D	; 61
     830:	4a e2       	ldi	r20, 0x2A	; 42
     832:	50 e4       	ldi	r21, 0x40	; 64
     834:	0e 94 35 0a 	call	0x146a	; 0x146a <__subsf3>
     838:	26 ef       	ldi	r18, 0xF6	; 246
     83a:	38 e2       	ldi	r19, 0x28	; 40
     83c:	4c e5       	ldi	r20, 0x5C	; 92
     83e:	5f e3       	ldi	r21, 0x3F	; 63
     840:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__divsf3>
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	4a e7       	ldi	r20, 0x7A	; 122
     84a:	54 e4       	ldi	r21, 0x44	; 68
     84c:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <__mulsf3>
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 e2       	ldi	r20, 0x20	; 32
     856:	51 e4       	ldi	r21, 0x41	; 65
     858:	0e 94 a2 0a 	call	0x1544	; 0x1544 <__divsf3>
     85c:	0e 94 14 0b 	call	0x1628	; 0x1628 <__fixunssfsi>
     860:	f8 01       	movw	r30, r16
     862:	71 83       	std	Z+1, r23	; 0x01
     864:	60 83       	st	Z, r22
     866:	2f ef       	ldi	r18, 0xFF	; 255
     868:	20 93 3e 01 	sts	0x013E, r18	; 0x80013e <cont_canal.2602>
     86c:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <__data_end>
     870:	21 11       	cpse	r18, r1
     872:	07 c0       	rjmp	.+14     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     874:	f7 01       	movw	r30, r14
     876:	71 83       	std	Z+1, r23	; 0x01
     878:	60 83       	st	Z, r22
     87a:	2f 5f       	subi	r18, 0xFF	; 255
     87c:	20 93 3c 01 	sts	0x013C, r18	; 0x80013c <__data_end>
     880:	08 c0       	rjmp	.+16     	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     882:	f7 01       	movw	r30, r14
     884:	20 81       	ld	r18, Z
     886:	31 81       	ldd	r19, Z+1	; 0x01
     888:	26 17       	cp	r18, r22
     88a:	37 07       	cpc	r19, r23
     88c:	10 f4       	brcc	.+4      	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     88e:	71 83       	std	Z+1, r23	; 0x01
     890:	60 83       	st	Z, r22
     892:	f7 01       	movw	r30, r14
     894:	60 81       	ld	r22, Z
     896:	85 e0       	ldi	r24, 0x05	; 5
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0e 94 98 0c 	call	0x1930	; 0x1930 <eeprom_write_byte>
     89e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <cont_canal.2602>
     8a2:	8f 5f       	subi	r24, 0xFF	; 255
     8a4:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <cont_canal.2602>
     8a8:	f4 01       	movw	r30, r8
     8aa:	10 82       	st	Z, r1
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	1f 91       	pop	r17
     8b2:	0f 91       	pop	r16
     8b4:	ff 90       	pop	r15
     8b6:	ef 90       	pop	r14
     8b8:	df 90       	pop	r13
     8ba:	cf 90       	pop	r12
     8bc:	bf 90       	pop	r11
     8be:	af 90       	pop	r10
     8c0:	9f 90       	pop	r9
     8c2:	8f 90       	pop	r8
     8c4:	7f 90       	pop	r7
     8c6:	6f 90       	pop	r6
     8c8:	5f 90       	pop	r5
     8ca:	4f 90       	pop	r4
     8cc:	08 95       	ret

000008ce <USART_Init>:
     8ce:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     8d2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     8d6:	88 e9       	ldi	r24, 0x98	; 152
     8d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     8dc:	8e e0       	ldi	r24, 0x0E	; 14
     8de:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     8e2:	08 95       	ret

000008e4 <USART_Transmit>:
     8e4:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     8e8:	95 ff       	sbrs	r25, 5
     8ea:	fc cf       	rjmp	.-8      	; 0x8e4 <USART_Transmit>
     8ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     8f0:	08 95       	ret

000008f2 <__vector_18>:
ISR(USART_RX_vect)
{
     8f2:	1f 92       	push	r1
     8f4:	0f 92       	push	r0
     8f6:	0f b6       	in	r0, 0x3f	; 63
     8f8:	0f 92       	push	r0
     8fa:	11 24       	eor	r1, r1
     8fc:	2f 93       	push	r18
     8fe:	3f 93       	push	r19
     900:	4f 93       	push	r20
     902:	5f 93       	push	r21
     904:	6f 93       	push	r22
     906:	7f 93       	push	r23
     908:	8f 93       	push	r24
     90a:	9f 93       	push	r25
     90c:	af 93       	push	r26
     90e:	bf 93       	push	r27
     910:	cf 93       	push	r28
     912:	ef 93       	push	r30
     914:	ff 93       	push	r31
	char char_recebido;
	char_recebido = UDR0; //Atribui char_recebido a UDR0
     916:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
	if(char_recebido =='d'){ //Verifica se o usuário enviou o caractere "d" no monitor serial
     91a:	c4 36       	cpi	r28, 0x64	; 100
     91c:	21 f4       	brne	.+8      	; 0x926 <__stack+0x27>
		USART_Transmit(temperatura_max); //Transmite a temperatura máxima armazenada na EEPROM
     91e:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <temperatura_max>
     922:	0e 94 72 04 	call	0x8e4	; 0x8e4 <USART_Transmit>
	}
	if(char_recebido == 'l'){ //Verifica se o usuário enviou o caractere "l" no monitor serial
     926:	cc 36       	cpi	r28, 0x6C	; 108
     928:	21 f4       	brne	.+8      	; 0x932 <__stack+0x33>
		temperatura_max = 0; //Zera o valor da temperatura máxima que está armazenada na EEPROM
     92a:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <temperatura_max+0x1>
     92e:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <temperatura_max>
	}
	
	if(char_recebido =='f'){ //Verifica se o usuário enviou o caractere "f" no monitor serial
     932:	c6 36       	cpi	r28, 0x66	; 102
     934:	21 f4       	brne	.+8      	; 0x93e <__stack+0x3f>
		USART_Transmit(forca_max); //Transmite a força máxima armazenada na EEPROM
     936:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <forca_max>
     93a:	0e 94 72 04 	call	0x8e4	; 0x8e4 <USART_Transmit>
	}
	if(char_recebido == 'c'){ //Verifica se o usuário enviou o caractere "c" no monitor serial
     93e:	c3 36       	cpi	r28, 0x63	; 99
     940:	21 f4       	brne	.+8      	; 0x94a <__stack+0x4b>
		forca_max = 0; //Zera o valor da força máxima que está armazenada na EEPROM
     942:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <forca_max+0x1>
     946:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <forca_max>
	}
}
     94a:	ff 91       	pop	r31
     94c:	ef 91       	pop	r30
     94e:	cf 91       	pop	r28
     950:	bf 91       	pop	r27
     952:	af 91       	pop	r26
     954:	9f 91       	pop	r25
     956:	8f 91       	pop	r24
     958:	7f 91       	pop	r23
     95a:	6f 91       	pop	r22
     95c:	5f 91       	pop	r21
     95e:	4f 91       	pop	r20
     960:	3f 91       	pop	r19
     962:	2f 91       	pop	r18
     964:	0f 90       	pop	r0
     966:	0f be       	out	0x3f, r0	; 63
     968:	0f 90       	pop	r0
     96a:	1f 90       	pop	r1
     96c:	18 95       	reti

0000096e <airbag>:

void airbag (uint16_t *distancia_sonar_pont, uint32_t *vel_carro_pont, uint16_t *forca_pont) {
	
	if ((*distancia_sonar_pont < 300) && (*vel_carro_pont > 20)) //Verifica se a distância sonar é menor que 300cm e a velocidade do carro é maior que 20
     96e:	fc 01       	movw	r30, r24
     970:	80 81       	ld	r24, Z
     972:	91 81       	ldd	r25, Z+1	; 0x01
     974:	8c 32       	cpi	r24, 0x2C	; 44
     976:	91 40       	sbci	r25, 0x01	; 1
     978:	a8 f4       	brcc	.+42     	; 0x9a4 <airbag+0x36>
     97a:	fb 01       	movw	r30, r22
     97c:	80 81       	ld	r24, Z
     97e:	91 81       	ldd	r25, Z+1	; 0x01
     980:	a2 81       	ldd	r26, Z+2	; 0x02
     982:	b3 81       	ldd	r27, Z+3	; 0x03
     984:	45 97       	sbiw	r24, 0x15	; 21
     986:	a1 05       	cpc	r26, r1
     988:	b1 05       	cpc	r27, r1
     98a:	60 f0       	brcs	.+24     	; 0x9a4 <airbag+0x36>
	{
		OCR2B = 25; //Se a condição for verdadeira diminuir o duty cicle baixa pra 25
     98c:	89 e1       	ldi	r24, 0x19	; 25
     98e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
		
		if(*forca_pont > 30){ //Verifica se a força detectada pelo sensor de impacto é maior que 30kN
     992:	fa 01       	movw	r30, r20
     994:	80 81       	ld	r24, Z
     996:	91 81       	ldd	r25, Z+1	; 0x01
     998:	4f 97       	sbiw	r24, 0x1f	; 31
     99a:	18 f0       	brcs	.+6      	; 0x9a2 <airbag+0x34>
			PORTC = 0b11111111; //PC6 com nível lógico alto, acionando o airbag
     99c:	8f ef       	ldi	r24, 0xFF	; 255
     99e:	88 b9       	out	0x08, r24	; 8
     9a0:	08 95       	ret
		}
		else {
			PORTC = 0b00000000; //PC6 com nível lógico baixo
     9a2:	18 b8       	out	0x08, r1	; 8
     9a4:	08 95       	ret

000009a6 <main>:
unsigned char USART_Receive(void);
void airbag (uint16_t *distancia_sonar_pont, uint32_t *vel_carro_pont, uint16_t *forca_pont);

int main(void)
{
	USART_Init(MYUBRR);
     9a6:	87 e6       	ldi	r24, 0x67	; 103
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 67 04 	call	0x8ce	; 0x8ce <USART_Init>

	// Configuração das portas
	//DDRC = 0b10000000;
	//PORTC = 0b10000000;
	DDRB = 0b11111110;	// Portas B como saidas para o display 7seg
     9ae:	8e ef       	ldi	r24, 0xFE	; 254
     9b0:	84 b9       	out	0x04, r24	; 4
	DDRD &= 0b11000011;	// Declarando PD4, PD5 e PD2 como entradas e PD3 como saída
     9b2:	8a b1       	in	r24, 0x0a	; 10
     9b4:	83 7c       	andi	r24, 0xC3	; 195
     9b6:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00111100;	// Desabilita o resistor de Pull-up do Pino PD3, PD4, PD5 e PD6
     9b8:	8c e3       	ldi	r24, 0x3C	; 60
     9ba:	8b b9       	out	0x0b, r24	; 11


	EICRA = 0b00000010; // Borda de descida INT0
     9bc:	e9 e6       	ldi	r30, 0x69	; 105
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	82 e0       	ldi	r24, 0x02	; 2
     9c2:	80 83       	st	Z, r24
	EIMSK = 0b00000001; // Habilita a interrupcao externa INT0
     9c4:	91 e0       	ldi	r25, 0x01	; 1
     9c6:	9d bb       	out	0x1d, r25	; 29
	PCICR = 0b00000100; // Habilita a interrupção por mudança nos pinos do PORTD
     9c8:	24 e0       	ldi	r18, 0x04	; 4
     9ca:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK2 = 0b00110000; // Interrupção habilitada no PCINT21(PD5) e PCINT20(PD4)
     9ce:	90 e3       	ldi	r25, 0x30	; 48
     9d0:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__TEXT_REGION_LENGTH__+0x7f806d>

	EICRA |= 0b00000010;	//Dispara o INT0 na borda de descida
     9d4:	90 81       	ld	r25, Z
     9d6:	92 60       	ori	r25, 0x02	; 2
     9d8:	90 83       	st	Z, r25

	//Configuração do TIMER T0
	TCCR0A = 0b00000010;	// Habilita modo CTC do TC0, TOP = OCR0A;
     9da:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000010;	// Habilita o TC0 com prescaler = 8
     9dc:	85 bd       	out	0x25, r24	; 37
	OCR0A = 199;			// Ajusta o comparador para TC0 contar ate 199.
     9de:	97 ec       	ldi	r25, 0xC7	; 199
     9e0:	97 bd       	out	0x27, r25	; 39
	TIMSK0 = 0b00000010;	// Ativa a interrupção do TC0 na igualdade de comparação com o registrador OCR0A a cada 100us = (199 + 1)*8/16MHz
     9e2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

	//Configuração do ADC
	//ADMUX = 0b01000000; //VCC como referência e habilita a entrada analógica ADC5(PC5)
	ADCSRA = 0b11100111;//Habilita o AD, modo de conversão contínua, prescaler = 128
     9e6:	87 ee       	ldi	r24, 0xE7	; 231
     9e8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB = 0b00000000; //Modo de conversão contínua
     9ec:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>

	//Configuração do TIMER T2 ------> //FAST PWM, TOP = 0xFF e OC2B habilidados
	TCCR2A = 0b00100011; //PWM Rápido não invertido nos pinos OC2B
     9f0:	83 e2       	ldi	r24, 0x23	; 35
     9f2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	TCCR2B = 0b00000100; //Liga TC2, prescaler = 64, fpwm = f0sc/(256*prescaler) = 16MHz/(256*64) = 976Hz
     9f6:	20 93 b1 00 	sts	0x00B1, r18	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	OCR2B = 255; //controle do ciclo ativo do PWM 0C2B (PD3)
     9fa:	8f ef       	ldi	r24, 0xFF	; 255
     9fc:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	
	//Configuração do TIMER T1
	TCCR1A = 0;
     a00:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (1 << ICES1) | (1 << CS11) | (1 << CS10); //Captura na borda de subida, TC1 com prescaler = 64
     a04:	83 e4       	ldi	r24, 0x43	; 67
     a06:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 = 1 << ICIE1; //Habilita a interrupção por captura
     a0a:	80 e2       	ldi	r24, 0x20	; 32
     a0c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

	sei();
     a10:	78 94       	sei

	dist_km = eeprom_read_dword(ENDERECO_HODOMETRO); //Lê o valor do hodometro armazenado no EEPROM (posições de 0 à 3)
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 92 0c 	call	0x1924	; 0x1924 <eeprom_read_dword>
     a1a:	6b 01       	movw	r12, r22
     a1c:	7c 01       	movw	r14, r24
     a1e:	60 93 55 01 	sts	0x0155, r22	; 0x800155 <dist_km>
     a22:	70 93 56 01 	sts	0x0156, r23	; 0x800156 <dist_km+0x1>
     a26:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <dist_km+0x2>
     a2a:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <dist_km+0x3>
	diametro_pneu = eeprom_read_byte(ENDERECO_DIAMETRO_PNEU); //Lê o valor do diametro do pneu armazenado no EEPROM (posição 4)
     a2e:	84 e0       	ldi	r24, 0x04	; 4
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 8a 0c 	call	0x1914	; 0x1914 <eeprom_read_byte>
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a3c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	forca_max = eeprom_read_byte(ENDERECO_FORCA_MAXIMA); //Lê o valor da força máxima armazenada na EEPROM (posição 5)
     a40:	85 e0       	ldi	r24, 0x05	; 5
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	0e 94 8a 0c 	call	0x1914	; 0x1914 <eeprom_read_byte>
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <forca_max+0x1>
     a4e:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <forca_max>
	temperatura_max = eeprom_read_byte(ENDERECO_TEMPERATURA_MAX); //Lê o valor da temperatura máxima da bateria armazenada na EEPROM (posição 6)
     a52:	86 e0       	ldi	r24, 0x06	; 6
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	0e 94 8a 0c 	call	0x1914	; 0x1914 <eeprom_read_byte>
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <temperatura_max+0x1>
     a60:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <temperatura_max>
	
	dist_anterior = dist_km * 100000;
     a64:	a7 01       	movw	r20, r14
     a66:	96 01       	movw	r18, r12
     a68:	60 ea       	ldi	r22, 0xA0	; 160
     a6a:	76 e8       	ldi	r23, 0x86	; 134
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 3e 0c 	call	0x187c	; 0x187c <__mulsi3>
     a74:	60 93 51 01 	sts	0x0151, r22	; 0x800151 <dist_anterior>
     a78:	70 93 52 01 	sts	0x0152, r23	; 0x800152 <dist_anterior+0x1>
     a7c:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <dist_anterior+0x2>
     a80:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <dist_anterior+0x3>
	
	//Inicia o display SSD1306
	GLCD_Setup();
     a84:	0e 94 fa 07 	call	0xff4	; 0xff4 <GLCD_Setup>
	GLCD_SetFont(Font5x8, 5, 8, GLCD_Overwrite);
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	48 e0       	ldi	r20, 0x08	; 8
     a8c:	65 e0       	ldi	r22, 0x05	; 5
     a8e:	88 e6       	ldi	r24, 0x68	; 104
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	0e 94 83 08 	call	0x1106	; 0x1106 <GLCD_SetFont>
	GLCD_InvertScreen();
     a96:	0e 94 73 08 	call	0x10e6	; 0x10e6 <GLCD_InvertScreen>


	while (1)
	{
		
		leitura_sensores_ADC(&flag_150ms, &temperatura, &bateria, &temperatura_max, &forca, &forca_max); //Chama a função que lê os valores ADC
     a9a:	0f 2e       	mov	r0, r31
     a9c:	f5 e4       	ldi	r31, 0x45	; 69
     a9e:	ef 2e       	mov	r14, r31
     aa0:	f1 e0       	ldi	r31, 0x01	; 1
     aa2:	ff 2e       	mov	r15, r31
     aa4:	f0 2d       	mov	r31, r0
     aa6:	07 e4       	ldi	r16, 0x47	; 71
     aa8:	11 e0       	ldi	r17, 0x01	; 1
     aaa:	29 e4       	ldi	r18, 0x49	; 73
     aac:	31 e0       	ldi	r19, 0x01	; 1
     aae:	4d e4       	ldi	r20, 0x4D	; 77
     ab0:	51 e0       	ldi	r21, 0x01	; 1
     ab2:	6b e4       	ldi	r22, 0x4B	; 75
     ab4:	71 e0       	ldi	r23, 0x01	; 1
     ab6:	81 e4       	ldi	r24, 0x41	; 65
     ab8:	91 e0       	ldi	r25, 0x01	; 1
     aba:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <leitura_sensores_ADC>
		airbag (&distancia_sonar_cm, &vel_carro, &forca);
     abe:	a8 01       	movw	r20, r16
     ac0:	69 e6       	ldi	r22, 0x69	; 105
     ac2:	71 e0       	ldi	r23, 0x01	; 1
     ac4:	84 e7       	ldi	r24, 0x74	; 116
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	0e 94 b7 04 	call	0x96e	; 0x96e <airbag>
		
		GLCD_Clear();
     acc:	0e 94 6f 08 	call	0x10de	; 0x10de <GLCD_Clear>
		GLCD_GotoXY(0, 0);
     ad0:	60 e0       	ldi	r22, 0x00	; 0
     ad2:	80 e0       	ldi	r24, 0x00	; 0
     ad4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("LASD Car");
     ad8:	82 e0       	ldi	r24, 0x02	; 2
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		
		//Imprime o valor das rotações por minuto
		GLCD_GotoXY(0, 15);
     ae0:	6f e0       	ldi	r22, 0x0F	; 15
     ae2:	80 e0       	ldi	r24, 0x00	; 0
     ae4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(RPM);
     ae8:	60 91 5d 01 	lds	r22, 0x015D	; 0x80015d <RPM>
     aec:	70 91 5e 01 	lds	r23, 0x015E	; 0x80015e <RPM+0x1>
     af0:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <RPM+0x2>
     af4:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <RPM+0x3>
     af8:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		GLCD_GotoXY(30, 15);
     afc:	6f e0       	ldi	r22, 0x0F	; 15
     afe:	8e e1       	ldi	r24, 0x1E	; 30
     b00:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("rpm");
     b04:	8b e0       	ldi	r24, 0x0B	; 11
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		
		//Imprime o valor da distância sonar
		GLCD_GotoXY(0, 25);
     b0c:	69 e1       	ldi	r22, 0x19	; 25
     b0e:	80 e0       	ldi	r24, 0x00	; 0
     b10:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("Sonar (cm): ");
     b14:	8f e0       	ldi	r24, 0x0F	; 15
     b16:	91 e0       	ldi	r25, 0x01	; 1
     b18:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		GLCD_GotoXY(65, 25);
     b1c:	69 e1       	ldi	r22, 0x19	; 25
     b1e:	81 e4       	ldi	r24, 0x41	; 65
     b20:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(distancia_sonar_cm);
     b24:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <distancia_sonar_cm>
     b28:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <distancia_sonar_cm+0x1>
     b2c:	80 e0       	ldi	r24, 0x00	; 0
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		
		//Imprime diametro do pneu
		GLCD_GotoXY(0, 35);
     b34:	63 e2       	ldi	r22, 0x23	; 35
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("D. Pneu (cm): ");
     b3c:	8c e1       	ldi	r24, 0x1C	; 28
     b3e:	91 e0       	ldi	r25, 0x01	; 1
     b40:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		GLCD_GotoXY(80, 35);
     b44:	63 e2       	ldi	r22, 0x23	; 35
     b46:	80 e5       	ldi	r24, 0x50	; 80
     b48:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(diametro_pneu);
     b4c:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b50:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		
		//Imprime a distancia percorrida
		GLCD_GotoXY(20, 50);
     b5c:	62 e3       	ldi	r22, 0x32	; 50
     b5e:	84 e1       	ldi	r24, 0x14	; 20
     b60:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(dist_km);
     b64:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <dist_km>
     b68:	70 91 56 01 	lds	r23, 0x0156	; 0x800156 <dist_km+0x1>
     b6c:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <dist_km+0x2>
     b70:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <dist_km+0x3>
     b74:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		GLCD_GotoXY(50, 50);
     b78:	62 e3       	ldi	r22, 0x32	; 50
     b7a:	82 e3       	ldi	r24, 0x32	; 50
     b7c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("km");
     b80:	8b e2       	ldi	r24, 0x2B	; 43
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		
		//Imprime a distancia percorrida
		GLCD_GotoXY(80, 50);
     b88:	62 e3       	ldi	r22, 0x32	; 50
     b8a:	80 e5       	ldi	r24, 0x50	; 80
     b8c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(forca);
     b90:	60 91 47 01 	lds	r22, 0x0147	; 0x800147 <forca>
     b94:	70 91 48 01 	lds	r23, 0x0148	; 0x800148 <forca+0x1>
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		GLCD_GotoXY(100, 50);
     ba0:	62 e3       	ldi	r22, 0x32	; 50
     ba2:	84 e6       	ldi	r24, 0x64	; 100
     ba4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("kN");
     ba8:	8e e2       	ldi	r24, 0x2E	; 46
     baa:	91 e0       	ldi	r25, 0x01	; 1
     bac:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		
		//Imprime o percentual da bateria
		GLCD_GotoXY(100, 5);
     bb0:	65 e0       	ldi	r22, 0x05	; 5
     bb2:	84 e6       	ldi	r24, 0x64	; 100
     bb4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(bateria);
     bb8:	60 91 4d 01 	lds	r22, 0x014D	; 0x80014d <bateria>
     bbc:	70 91 4e 01 	lds	r23, 0x014E	; 0x80014e <bateria+0x1>
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		GLCD_GotoXY(120, 5);
     bc8:	65 e0       	ldi	r22, 0x05	; 5
     bca:	88 e7       	ldi	r24, 0x78	; 120
     bcc:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("%");
     bd0:	81 e3       	ldi	r24, 0x31	; 49
     bd2:	91 e0       	ldi	r25, 0x01	; 1
     bd4:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
		
		//Imprime a temperatura do motor
		GLCD_GotoXY(100, 20);
     bd8:	64 e1       	ldi	r22, 0x14	; 20
     bda:	84 e6       	ldi	r24, 0x64	; 100
     bdc:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintInteger(temperatura);
     be0:	60 91 4b 01 	lds	r22, 0x014B	; 0x80014b <temperatura>
     be4:	70 91 4c 01 	lds	r23, 0x014C	; 0x80014c <temperatura+0x1>
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0e 94 ca 09 	call	0x1394	; 0x1394 <GLCD_PrintInteger>
		GLCD_GotoXY(120, 20);
     bf0:	64 e1       	ldi	r22, 0x14	; 20
     bf2:	88 e7       	ldi	r24, 0x78	; 120
     bf4:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
		GLCD_PrintString("C");
     bf8:	83 e3       	ldi	r24, 0x33	; 51
     bfa:	91 e0       	ldi	r25, 0x01	; 1
     bfc:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>

		GLCD_Render();
     c00:	0e 94 c3 07 	call	0xf86	; 0xf86 <GLCD_Render>

		if(!(PIND & 0b10000000))
     c04:	4f 99       	sbic	0x09, 7	; 9
     c06:	08 c0       	rjmp	.+16     	; 0xc18 <main+0x272>
		{
			GLCD_GotoXY(120, 45);
     c08:	6d e2       	ldi	r22, 0x2D	; 45
     c0a:	88 e7       	ldi	r24, 0x78	; 120
     c0c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
			GLCD_PrintString("P"); //Se a chave P está aberta, escreve "P" no display
     c10:	85 e3       	ldi	r24, 0x35	; 53
     c12:	91 e0       	ldi	r25, 0x01	; 1
     c14:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>

		}
		//Se a chave P está fechada
		if((PIND & 0b10000000))
     c18:	4f 9b       	sbis	0x09, 7	; 9
     c1a:	14 c0       	rjmp	.+40     	; 0xc44 <main+0x29e>
		{

			if(!(PIND & 0b01000000)) //e a chave D/R está aberta, escreve "D" no display
     c1c:	4e 99       	sbic	0x09, 6	; 9
     c1e:	08 c0       	rjmp	.+16     	; 0xc30 <main+0x28a>
			{
				GLCD_GotoXY(120, 45);
     c20:	6d e2       	ldi	r22, 0x2D	; 45
     c22:	88 e7       	ldi	r24, 0x78	; 120
     c24:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
				GLCD_PrintString("D");
     c28:	87 e3       	ldi	r24, 0x37	; 55
     c2a:	91 e0       	ldi	r25, 0x01	; 1
     c2c:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>

			}
			if((PIND & 0b01000000)) //e a chave D/R está fechada, escreve "R" no display
     c30:	4e 9b       	sbis	0x09, 6	; 9
     c32:	08 c0       	rjmp	.+16     	; 0xc44 <main+0x29e>
			{
				GLCD_GotoXY(120, 45);
     c34:	6d e2       	ldi	r22, 0x2D	; 45
     c36:	88 e7       	ldi	r24, 0x78	; 120
     c38:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
				GLCD_PrintString("R");
     c3c:	89 e3       	ldi	r24, 0x39	; 57
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
			}

		}
		GLCD_Render();
     c44:	0e 94 c3 07 	call	0xf86	; 0xf86 <GLCD_Render>
		//Condição para mostrar a velocidade no display de 7 segmentos
		if((delta_t % 2) / 1000 == 0)
		{
			switch(cont)
     c48:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <cont>
     c4c:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <cont+0x1>
     c50:	81 30       	cpi	r24, 0x01	; 1
     c52:	91 05       	cpc	r25, r1
     c54:	09 f1       	breq	.+66     	; 0xc98 <main+0x2f2>
     c56:	82 30       	cpi	r24, 0x02	; 2
     c58:	91 05       	cpc	r25, r1
     c5a:	09 f4       	brne	.+2      	; 0xc5e <main+0x2b8>
     c5c:	42 c0       	rjmp	.+132    	; 0xce2 <main+0x33c>
     c5e:	89 2b       	or	r24, r25
     c60:	09 f0       	breq	.+2      	; 0xc64 <main+0x2be>
     c62:	66 c0       	rjmp	.+204    	; 0xd30 <main+0x38a>
			{
				case 0:
				PORTB &= 0b00000001; // resetando PB1 - PB6
     c64:	85 b1       	in	r24, 0x05	; 5
     c66:	81 70       	andi	r24, 0x01	; 1
     c68:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b11000000; // resetando PB4, pino que habilita o display das unidades
     c6a:	85 b1       	in	r24, 0x05	; 5
     c6c:	80 6c       	ori	r24, 0xC0	; 192
     c6e:	85 b9       	out	0x05, r24	; 5
				PORTB |= ((((vel_carro / 1) % 10) & 0b00001111) << 1);
     c70:	c5 b1       	in	r28, 0x05	; 5
     c72:	60 91 69 01 	lds	r22, 0x0169	; 0x800169 <vel_carro>
     c76:	70 91 6a 01 	lds	r23, 0x016A	; 0x80016a <vel_carro+0x1>
     c7a:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <vel_carro+0x2>
     c7e:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <vel_carro+0x3>
     c82:	2a e0       	ldi	r18, 0x0A	; 10
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	40 e0       	ldi	r20, 0x00	; 0
     c88:	50 e0       	ldi	r21, 0x00	; 0
     c8a:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     c8e:	6f 70       	andi	r22, 0x0F	; 15
     c90:	66 0f       	add	r22, r22
     c92:	6c 2b       	or	r22, r28
     c94:	65 b9       	out	0x05, r22	; 5
				break;
     c96:	4c c0       	rjmp	.+152    	; 0xd30 <main+0x38a>

				case 1:
				PORTB &= 0b00000001; // resetando PB1 - PB6
     c98:	85 b1       	in	r24, 0x05	; 5
     c9a:	81 70       	andi	r24, 0x01	; 1
     c9c:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b10100000; // resetando PB5 e PB7, pino que habilita o display das dezenas
     c9e:	85 b1       	in	r24, 0x05	; 5
     ca0:	80 6a       	ori	r24, 0xA0	; 160
     ca2:	85 b9       	out	0x05, r24	; 5
				PORTB |= ((((vel_carro / 10) % 10) & 0b00001111) << 1);
     ca4:	c5 b1       	in	r28, 0x05	; 5
     ca6:	60 91 69 01 	lds	r22, 0x0169	; 0x800169 <vel_carro>
     caa:	70 91 6a 01 	lds	r23, 0x016A	; 0x80016a <vel_carro+0x1>
     cae:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <vel_carro+0x2>
     cb2:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <vel_carro+0x3>
     cb6:	0f 2e       	mov	r0, r31
     cb8:	fa e0       	ldi	r31, 0x0A	; 10
     cba:	cf 2e       	mov	r12, r31
     cbc:	d1 2c       	mov	r13, r1
     cbe:	e1 2c       	mov	r14, r1
     cc0:	f1 2c       	mov	r15, r1
     cc2:	f0 2d       	mov	r31, r0
     cc4:	a7 01       	movw	r20, r14
     cc6:	96 01       	movw	r18, r12
     cc8:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     ccc:	ca 01       	movw	r24, r20
     cce:	b9 01       	movw	r22, r18
     cd0:	a7 01       	movw	r20, r14
     cd2:	96 01       	movw	r18, r12
     cd4:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     cd8:	6f 70       	andi	r22, 0x0F	; 15
     cda:	66 0f       	add	r22, r22
     cdc:	6c 2b       	or	r22, r28
     cde:	65 b9       	out	0x05, r22	; 5
				break;
     ce0:	27 c0       	rjmp	.+78     	; 0xd30 <main+0x38a>

				case 2:
				PORTB &= 0b00000001; // resetando PB1 - PB6
     ce2:	85 b1       	in	r24, 0x05	; 5
     ce4:	81 70       	andi	r24, 0x01	; 1
     ce6:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b01100000; // resetando PB5 e PB7, pino que habilita o display das centenas
     ce8:	85 b1       	in	r24, 0x05	; 5
     cea:	80 66       	ori	r24, 0x60	; 96
     cec:	85 b9       	out	0x05, r24	; 5
				PORTB |= ((((vel_carro / 100) % 10) & 0b00001111) << 1);
     cee:	c5 b1       	in	r28, 0x05	; 5
     cf0:	60 91 69 01 	lds	r22, 0x0169	; 0x800169 <vel_carro>
     cf4:	70 91 6a 01 	lds	r23, 0x016A	; 0x80016a <vel_carro+0x1>
     cf8:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <vel_carro+0x2>
     cfc:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <vel_carro+0x3>
     d00:	24 e6       	ldi	r18, 0x64	; 100
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     d0c:	ca 01       	movw	r24, r20
     d0e:	b9 01       	movw	r22, r18
     d10:	2a e0       	ldi	r18, 0x0A	; 10
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	40 e0       	ldi	r20, 0x00	; 0
     d16:	50 e0       	ldi	r21, 0x00	; 0
     d18:	0e 94 4e 0c 	call	0x189c	; 0x189c <__udivmodsi4>
     d1c:	6f 70       	andi	r22, 0x0F	; 15
     d1e:	66 0f       	add	r22, r22
     d20:	6c 2b       	or	r22, r28
     d22:	65 b9       	out	0x05, r22	; 5
				cont = -1;
     d24:	8f ef       	ldi	r24, 0xFF	; 255
     d26:	9f ef       	ldi	r25, 0xFF	; 255
     d28:	90 93 40 01 	sts	0x0140, r25	; 0x800140 <cont+0x1>
     d2c:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <cont>
				break;
				
			}
		}
		cont++;
     d30:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <cont>
     d34:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <cont+0x1>
     d38:	01 96       	adiw	r24, 0x01	; 1
     d3a:	90 93 40 01 	sts	0x0140, r25	; 0x800140 <cont+0x1>
     d3e:	80 93 3f 01 	sts	0x013F, r24	; 0x80013f <cont>
	}
     d42:	ab ce       	rjmp	.-682    	; 0xa9a <main+0xf4>

00000d44 <GLCD_BufferWrite>:
		break;

		GLCD_PrintChar(r);
		r = pgm_read_byte(Text++);
	}
}
     d44:	66 95       	lsr	r22
     d46:	66 95       	lsr	r22
     d48:	66 95       	lsr	r22
     d4a:	e8 2f       	mov	r30, r24
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 e8       	ldi	r24, 0x80	; 128
     d50:	68 9f       	mul	r22, r24
     d52:	e0 0d       	add	r30, r0
     d54:	f1 1d       	adc	r31, r1
     d56:	11 24       	eor	r1, r1
     d58:	e1 58       	subi	r30, 0x81	; 129
     d5a:	fe 4f       	sbci	r31, 0xFE	; 254
     d5c:	40 83       	st	Z, r20
     d5e:	08 95       	ret

00000d60 <GLCD_BufferRead>:
     d60:	66 95       	lsr	r22
     d62:	66 95       	lsr	r22
     d64:	66 95       	lsr	r22
     d66:	e8 2f       	mov	r30, r24
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	80 e8       	ldi	r24, 0x80	; 128
     d6c:	68 9f       	mul	r22, r24
     d6e:	e0 0d       	add	r30, r0
     d70:	f1 1d       	adc	r31, r1
     d72:	11 24       	eor	r1, r1
     d74:	e1 58       	subi	r30, 0x81	; 129
     d76:	fe 4f       	sbci	r31, 0xFE	; 254
     d78:	80 81       	ld	r24, Z
     d7a:	08 95       	ret

00000d7c <Int2bcd>:
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	dc 01       	movw	r26, r24
     d82:	cb 01       	movw	r24, r22
     d84:	fa 01       	movw	r30, r20
     d86:	20 e3       	ldi	r18, 0x30	; 48
     d88:	22 87       	std	Z+10, r18	; 0x0a
     d8a:	21 87       	std	Z+9, r18	; 0x09
     d8c:	20 87       	std	Z+8, r18	; 0x08
     d8e:	27 83       	std	Z+7, r18	; 0x07
     d90:	26 83       	std	Z+6, r18	; 0x06
     d92:	25 83       	std	Z+5, r18	; 0x05
     d94:	24 83       	std	Z+4, r18	; 0x04
     d96:	23 83       	std	Z+3, r18	; 0x03
     d98:	22 83       	std	Z+2, r18	; 0x02
     d9a:	21 83       	std	Z+1, r18	; 0x01
     d9c:	20 83       	st	Z, r18
     d9e:	bb 23       	and	r27, r27
     da0:	4c f4       	brge	.+18     	; 0xdb4 <Int2bcd+0x38>
     da2:	b0 95       	com	r27
     da4:	a0 95       	com	r26
     da6:	90 95       	com	r25
     da8:	81 95       	neg	r24
     daa:	9f 4f       	sbci	r25, 0xFF	; 255
     dac:	af 4f       	sbci	r26, 0xFF	; 255
     dae:	bf 4f       	sbci	r27, 0xFF	; 255
     db0:	31 e0       	ldi	r19, 0x01	; 1
     db2:	08 c0       	rjmp	.+16     	; 0xdc4 <Int2bcd+0x48>
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	06 c0       	rjmp	.+12     	; 0xdc4 <Int2bcd+0x48>
     db8:	9a 5c       	subi	r25, 0xCA	; 202
     dba:	aa 49       	sbci	r26, 0x9A	; 154
     dbc:	bb 43       	sbci	r27, 0x3B	; 59
     dbe:	21 81       	ldd	r18, Z+1	; 0x01
     dc0:	2f 5f       	subi	r18, 0xFF	; 255
     dc2:	21 83       	std	Z+1, r18	; 0x01
     dc4:	81 15       	cp	r24, r1
     dc6:	2a ec       	ldi	r18, 0xCA	; 202
     dc8:	92 07       	cpc	r25, r18
     dca:	2a e9       	ldi	r18, 0x9A	; 154
     dcc:	a2 07       	cpc	r26, r18
     dce:	2b e3       	ldi	r18, 0x3B	; 59
     dd0:	b2 07       	cpc	r27, r18
     dd2:	94 f7       	brge	.-28     	; 0xdb8 <Int2bcd+0x3c>
     dd4:	06 c0       	rjmp	.+12     	; 0xde2 <Int2bcd+0x66>
     dd6:	91 5e       	subi	r25, 0xE1	; 225
     dd8:	a5 4f       	sbci	r26, 0xF5	; 245
     dda:	b5 40       	sbci	r27, 0x05	; 5
     ddc:	22 81       	ldd	r18, Z+2	; 0x02
     dde:	2f 5f       	subi	r18, 0xFF	; 255
     de0:	22 83       	std	Z+2, r18	; 0x02
     de2:	81 15       	cp	r24, r1
     de4:	21 ee       	ldi	r18, 0xE1	; 225
     de6:	92 07       	cpc	r25, r18
     de8:	25 ef       	ldi	r18, 0xF5	; 245
     dea:	a2 07       	cpc	r26, r18
     dec:	25 e0       	ldi	r18, 0x05	; 5
     dee:	b2 07       	cpc	r27, r18
     df0:	94 f7       	brge	.-28     	; 0xdd6 <Int2bcd+0x5a>
     df2:	07 c0       	rjmp	.+14     	; 0xe02 <Int2bcd+0x86>
     df4:	80 58       	subi	r24, 0x80	; 128
     df6:	96 49       	sbci	r25, 0x96	; 150
     df8:	a8 49       	sbci	r26, 0x98	; 152
     dfa:	b1 09       	sbc	r27, r1
     dfc:	23 81       	ldd	r18, Z+3	; 0x03
     dfe:	2f 5f       	subi	r18, 0xFF	; 255
     e00:	23 83       	std	Z+3, r18	; 0x03
     e02:	80 38       	cpi	r24, 0x80	; 128
     e04:	26 e9       	ldi	r18, 0x96	; 150
     e06:	92 07       	cpc	r25, r18
     e08:	28 e9       	ldi	r18, 0x98	; 152
     e0a:	a2 07       	cpc	r26, r18
     e0c:	b1 05       	cpc	r27, r1
     e0e:	94 f7       	brge	.-28     	; 0xdf4 <Int2bcd+0x78>
     e10:	07 c0       	rjmp	.+14     	; 0xe20 <Int2bcd+0xa4>
     e12:	80 54       	subi	r24, 0x40	; 64
     e14:	92 44       	sbci	r25, 0x42	; 66
     e16:	af 40       	sbci	r26, 0x0F	; 15
     e18:	b1 09       	sbc	r27, r1
     e1a:	24 81       	ldd	r18, Z+4	; 0x04
     e1c:	2f 5f       	subi	r18, 0xFF	; 255
     e1e:	24 83       	std	Z+4, r18	; 0x04
     e20:	80 34       	cpi	r24, 0x40	; 64
     e22:	22 e4       	ldi	r18, 0x42	; 66
     e24:	92 07       	cpc	r25, r18
     e26:	2f e0       	ldi	r18, 0x0F	; 15
     e28:	a2 07       	cpc	r26, r18
     e2a:	b1 05       	cpc	r27, r1
     e2c:	94 f7       	brge	.-28     	; 0xe12 <Int2bcd+0x96>
     e2e:	07 c0       	rjmp	.+14     	; 0xe3e <Int2bcd+0xc2>
     e30:	80 5a       	subi	r24, 0xA0	; 160
     e32:	96 48       	sbci	r25, 0x86	; 134
     e34:	a1 40       	sbci	r26, 0x01	; 1
     e36:	b1 09       	sbc	r27, r1
     e38:	25 81       	ldd	r18, Z+5	; 0x05
     e3a:	2f 5f       	subi	r18, 0xFF	; 255
     e3c:	25 83       	std	Z+5, r18	; 0x05
     e3e:	80 3a       	cpi	r24, 0xA0	; 160
     e40:	26 e8       	ldi	r18, 0x86	; 134
     e42:	92 07       	cpc	r25, r18
     e44:	21 e0       	ldi	r18, 0x01	; 1
     e46:	a2 07       	cpc	r26, r18
     e48:	b1 05       	cpc	r27, r1
     e4a:	94 f7       	brge	.-28     	; 0xe30 <Int2bcd+0xb4>
     e4c:	07 c0       	rjmp	.+14     	; 0xe5c <Int2bcd+0xe0>
     e4e:	80 51       	subi	r24, 0x10	; 16
     e50:	97 42       	sbci	r25, 0x27	; 39
     e52:	a1 09       	sbc	r26, r1
     e54:	b1 09       	sbc	r27, r1
     e56:	26 81       	ldd	r18, Z+6	; 0x06
     e58:	2f 5f       	subi	r18, 0xFF	; 255
     e5a:	26 83       	std	Z+6, r18	; 0x06
     e5c:	80 31       	cpi	r24, 0x10	; 16
     e5e:	27 e2       	ldi	r18, 0x27	; 39
     e60:	92 07       	cpc	r25, r18
     e62:	a1 05       	cpc	r26, r1
     e64:	b1 05       	cpc	r27, r1
     e66:	9c f7       	brge	.-26     	; 0xe4e <Int2bcd+0xd2>
     e68:	07 c0       	rjmp	.+14     	; 0xe78 <Int2bcd+0xfc>
     e6a:	88 5e       	subi	r24, 0xE8	; 232
     e6c:	93 40       	sbci	r25, 0x03	; 3
     e6e:	a1 09       	sbc	r26, r1
     e70:	b1 09       	sbc	r27, r1
     e72:	27 81       	ldd	r18, Z+7	; 0x07
     e74:	2f 5f       	subi	r18, 0xFF	; 255
     e76:	27 83       	std	Z+7, r18	; 0x07
     e78:	88 3e       	cpi	r24, 0xE8	; 232
     e7a:	23 e0       	ldi	r18, 0x03	; 3
     e7c:	92 07       	cpc	r25, r18
     e7e:	a1 05       	cpc	r26, r1
     e80:	b1 05       	cpc	r27, r1
     e82:	9c f7       	brge	.-26     	; 0xe6a <Int2bcd+0xee>
     e84:	07 c0       	rjmp	.+14     	; 0xe94 <Int2bcd+0x118>
     e86:	84 56       	subi	r24, 0x64	; 100
     e88:	91 09       	sbc	r25, r1
     e8a:	a1 09       	sbc	r26, r1
     e8c:	b1 09       	sbc	r27, r1
     e8e:	20 85       	ldd	r18, Z+8	; 0x08
     e90:	2f 5f       	subi	r18, 0xFF	; 255
     e92:	20 87       	std	Z+8, r18	; 0x08
     e94:	84 36       	cpi	r24, 0x64	; 100
     e96:	91 05       	cpc	r25, r1
     e98:	a1 05       	cpc	r26, r1
     e9a:	b1 05       	cpc	r27, r1
     e9c:	a4 f7       	brge	.-24     	; 0xe86 <Int2bcd+0x10a>
     e9e:	06 c0       	rjmp	.+12     	; 0xeac <Int2bcd+0x130>
     ea0:	0a 97       	sbiw	r24, 0x0a	; 10
     ea2:	a1 09       	sbc	r26, r1
     ea4:	b1 09       	sbc	r27, r1
     ea6:	21 85       	ldd	r18, Z+9	; 0x09
     ea8:	2f 5f       	subi	r18, 0xFF	; 255
     eaa:	21 87       	std	Z+9, r18	; 0x09
     eac:	8a 30       	cpi	r24, 0x0A	; 10
     eae:	91 05       	cpc	r25, r1
     eb0:	a1 05       	cpc	r26, r1
     eb2:	b1 05       	cpc	r27, r1
     eb4:	ac f7       	brge	.-22     	; 0xea0 <Int2bcd+0x124>
     eb6:	06 c0       	rjmp	.+12     	; 0xec4 <Int2bcd+0x148>
     eb8:	01 97       	sbiw	r24, 0x01	; 1
     eba:	a1 09       	sbc	r26, r1
     ebc:	b1 09       	sbc	r27, r1
     ebe:	22 85       	ldd	r18, Z+10	; 0x0a
     ec0:	2f 5f       	subi	r18, 0xFF	; 255
     ec2:	22 87       	std	Z+10, r18	; 0x0a
     ec4:	18 16       	cp	r1, r24
     ec6:	19 06       	cpc	r1, r25
     ec8:	1a 06       	cpc	r1, r26
     eca:	1b 06       	cpc	r1, r27
     ecc:	ac f3       	brlt	.-22     	; 0xeb8 <Int2bcd+0x13c>
     ece:	20 e0       	ldi	r18, 0x00	; 0
     ed0:	01 c0       	rjmp	.+2      	; 0xed4 <Int2bcd+0x158>
     ed2:	2f 5f       	subi	r18, 0xFF	; 255
     ed4:	df 01       	movw	r26, r30
     ed6:	a2 0f       	add	r26, r18
     ed8:	b1 1d       	adc	r27, r1
     eda:	8c 91       	ld	r24, X
     edc:	80 33       	cpi	r24, 0x30	; 48
     ede:	c9 f3       	breq	.-14     	; 0xed2 <Int2bcd+0x156>
     ee0:	33 23       	and	r19, r19
     ee2:	31 f0       	breq	.+12     	; 0xef0 <Int2bcd+0x174>
     ee4:	21 50       	subi	r18, 0x01	; 1
     ee6:	df 01       	movw	r26, r30
     ee8:	a2 0f       	add	r26, r18
     eea:	b1 1d       	adc	r27, r1
     eec:	8d e2       	ldi	r24, 0x2D	; 45
     eee:	8c 93       	st	X, r24
     ef0:	4a e0       	ldi	r20, 0x0A	; 10
     ef2:	42 1b       	sub	r20, r18
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	0d c0       	rjmp	.+26     	; 0xf12 <Int2bcd+0x196>
     ef8:	83 2f       	mov	r24, r19
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	ef 01       	movw	r28, r30
     efe:	c8 0f       	add	r28, r24
     f00:	d9 1f       	adc	r29, r25
     f02:	82 0f       	add	r24, r18
     f04:	91 1d       	adc	r25, r1
     f06:	df 01       	movw	r26, r30
     f08:	a8 0f       	add	r26, r24
     f0a:	b9 1f       	adc	r27, r25
     f0c:	8c 91       	ld	r24, X
     f0e:	88 83       	st	Y, r24
     f10:	3f 5f       	subi	r19, 0xFF	; 255
     f12:	43 17       	cp	r20, r19
     f14:	88 f7       	brcc	.-30     	; 0xef8 <Int2bcd+0x17c>
     f16:	e3 0f       	add	r30, r19
     f18:	f1 1d       	adc	r31, r1
     f1a:	10 82       	st	Z, r1
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	08 95       	ret

00000f22 <GLCD_Send>:
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	c8 2f       	mov	r28, r24
     f2c:	8b 01       	movw	r16, r22
     f2e:	d4 2f       	mov	r29, r20
     f30:	0e 94 17 0a 	call	0x142e	; 0x142e <TWI_BeginTransmission>
     f34:	88 e7       	ldi	r24, 0x78	; 120
     f36:	0e 94 29 0a 	call	0x1452	; 0x1452 <TWI_Transmit>
     f3a:	8c 2f       	mov	r24, r28
     f3c:	0e 94 29 0a 	call	0x1452	; 0x1452 <TWI_Transmit>
     f40:	c0 e0       	ldi	r28, 0x00	; 0
     f42:	07 c0       	rjmp	.+14     	; 0xf52 <GLCD_Send+0x30>
     f44:	f8 01       	movw	r30, r16
     f46:	ec 0f       	add	r30, r28
     f48:	f1 1d       	adc	r31, r1
     f4a:	80 81       	ld	r24, Z
     f4c:	0e 94 29 0a 	call	0x1452	; 0x1452 <TWI_Transmit>
     f50:	cf 5f       	subi	r28, 0xFF	; 255
     f52:	cd 17       	cp	r28, r29
     f54:	b8 f3       	brcs	.-18     	; 0xf44 <GLCD_Send+0x22>
     f56:	0e 94 21 0a 	call	0x1442	; 0x1442 <TWI_EndTransmission>
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	1f 91       	pop	r17
     f60:	0f 91       	pop	r16
     f62:	08 95       	ret

00000f64 <GLCD_SendCommand>:
     f64:	cf 93       	push	r28
     f66:	df 93       	push	r29
     f68:	1f 92       	push	r1
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	89 83       	std	Y+1, r24	; 0x01
     f70:	41 e0       	ldi	r20, 0x01	; 1
     f72:	be 01       	movw	r22, r28
     f74:	6f 5f       	subi	r22, 0xFF	; 255
     f76:	7f 4f       	sbci	r23, 0xFF	; 255
     f78:	80 e0       	ldi	r24, 0x00	; 0
     f7a:	0e 94 91 07 	call	0xf22	; 0xf22 <GLCD_Send>
     f7e:	0f 90       	pop	r0
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	08 95       	ret

00000f86 <GLCD_Render>:
     f86:	cf 93       	push	r28
     f88:	81 e2       	ldi	r24, 0x21	; 33
     f8a:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     f94:	8f e7       	ldi	r24, 0x7F	; 127
     f96:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     f9a:	82 e2       	ldi	r24, 0x22	; 34
     f9c:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     fa0:	80 e0       	ldi	r24, 0x00	; 0
     fa2:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     fa6:	87 e0       	ldi	r24, 0x07	; 7
     fa8:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     fac:	c0 e0       	ldi	r28, 0x00	; 0
     fae:	0b c0       	rjmp	.+22     	; 0xfc6 <GLCD_Render+0x40>
     fb0:	80 e1       	ldi	r24, 0x10	; 16
     fb2:	c8 9f       	mul	r28, r24
     fb4:	b0 01       	movw	r22, r0
     fb6:	11 24       	eor	r1, r1
     fb8:	61 58       	subi	r22, 0x81	; 129
     fba:	7e 4f       	sbci	r23, 0xFE	; 254
     fbc:	40 e1       	ldi	r20, 0x10	; 16
     fbe:	80 e4       	ldi	r24, 0x40	; 64
     fc0:	0e 94 91 07 	call	0xf22	; 0xf22 <GLCD_Send>
     fc4:	cf 5f       	subi	r28, 0xFF	; 255
     fc6:	c0 34       	cpi	r28, 0x40	; 64
     fc8:	98 f3       	brcs	.-26     	; 0xfb0 <GLCD_Render+0x2a>
     fca:	cf 91       	pop	r28
     fcc:	08 95       	ret

00000fce <GLCD_GotoX>:
     fce:	88 23       	and	r24, r24
     fd0:	14 f0       	brlt	.+4      	; 0xfd6 <GLCD_GotoX+0x8>
     fd2:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <__GLCD>
     fd6:	08 95       	ret

00000fd8 <GLCD_GotoY>:
     fd8:	80 34       	cpi	r24, 0x40	; 64
     fda:	10 f4       	brcc	.+4      	; 0xfe0 <GLCD_GotoY+0x8>
     fdc:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <__GLCD+0x1>
     fe0:	08 95       	ret

00000fe2 <GLCD_GotoXY>:
     fe2:	cf 93       	push	r28
     fe4:	c6 2f       	mov	r28, r22
     fe6:	0e 94 e7 07 	call	0xfce	; 0xfce <GLCD_GotoX>
     fea:	8c 2f       	mov	r24, r28
     fec:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <GLCD_GotoY>
     ff0:	cf 91       	pop	r28
     ff2:	08 95       	ret

00000ff4 <GLCD_Setup>:
     ff4:	0e 94 fe 09 	call	0x13fc	; 0x13fc <TWI_Setup>
     ff8:	8e ea       	ldi	r24, 0xAE	; 174
     ffa:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
     ffe:	85 ed       	ldi	r24, 0xD5	; 213
    1000:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1004:	80 ef       	ldi	r24, 0xF0	; 240
    1006:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    100a:	88 ea       	ldi	r24, 0xA8	; 168
    100c:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1010:	8f e3       	ldi	r24, 0x3F	; 63
    1012:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1016:	83 ed       	ldi	r24, 0xD3	; 211
    1018:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1022:	8d e8       	ldi	r24, 0x8D	; 141
    1024:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1028:	84 e1       	ldi	r24, 0x14	; 20
    102a:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    102e:	80 e4       	ldi	r24, 0x40	; 64
    1030:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1034:	80 e2       	ldi	r24, 0x20	; 32
    1036:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    103a:	80 e0       	ldi	r24, 0x00	; 0
    103c:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1040:	81 ea       	ldi	r24, 0xA1	; 161
    1042:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1046:	88 ec       	ldi	r24, 0xC8	; 200
    1048:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    104c:	8a ed       	ldi	r24, 0xDA	; 218
    104e:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1052:	82 e1       	ldi	r24, 0x12	; 18
    1054:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1058:	81 e8       	ldi	r24, 0x81	; 129
    105a:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    105e:	8f ef       	ldi	r24, 0xFF	; 255
    1060:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1064:	89 ed       	ldi	r24, 0xD9	; 217
    1066:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    106a:	81 ef       	ldi	r24, 0xF1	; 241
    106c:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1070:	8b ed       	ldi	r24, 0xDB	; 219
    1072:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1076:	80 e2       	ldi	r24, 0x20	; 32
    1078:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    107c:	84 ea       	ldi	r24, 0xA4	; 164
    107e:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1082:	86 ea       	ldi	r24, 0xA6	; 166
    1084:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1088:	8e e2       	ldi	r24, 0x2E	; 46
    108a:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    108e:	8f ea       	ldi	r24, 0xAF	; 175
    1090:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1094:	60 e0       	ldi	r22, 0x00	; 0
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
    109c:	e6 e7       	ldi	r30, 0x76	; 118
    109e:	f1 e0       	ldi	r31, 0x01	; 1
    10a0:	86 ea       	ldi	r24, 0xA6	; 166
    10a2:	82 83       	std	Z+2, r24	; 0x02
    10a4:	17 82       	std	Z+7, r1	; 0x07
    10a6:	16 82       	std	Z+6, r1	; 0x06
    10a8:	15 82       	std	Z+5, r1	; 0x05
    10aa:	11 82       	std	Z+1, r1	; 0x01
    10ac:	10 82       	st	Z, r1
    10ae:	08 95       	ret

000010b0 <GLCD_FillScreen>:
    10b0:	1f 93       	push	r17
    10b2:	cf 93       	push	r28
    10b4:	df 93       	push	r29
    10b6:	18 2f       	mov	r17, r24
    10b8:	d0 e0       	ldi	r29, 0x00	; 0
    10ba:	0b c0       	rjmp	.+22     	; 0x10d2 <GLCD_FillScreen+0x22>
    10bc:	41 2f       	mov	r20, r17
    10be:	6d 2f       	mov	r22, r29
    10c0:	8c 2f       	mov	r24, r28
    10c2:	0e 94 a2 06 	call	0xd44	; 0xd44 <GLCD_BufferWrite>
    10c6:	cf 5f       	subi	r28, 0xFF	; 255
    10c8:	01 c0       	rjmp	.+2      	; 0x10cc <GLCD_FillScreen+0x1c>
    10ca:	c0 e0       	ldi	r28, 0x00	; 0
    10cc:	cc 23       	and	r28, r28
    10ce:	b4 f7       	brge	.-20     	; 0x10bc <GLCD_FillScreen+0xc>
    10d0:	d8 5f       	subi	r29, 0xF8	; 248
    10d2:	d0 34       	cpi	r29, 0x40	; 64
    10d4:	d0 f3       	brcs	.-12     	; 0x10ca <GLCD_FillScreen+0x1a>
    10d6:	df 91       	pop	r29
    10d8:	cf 91       	pop	r28
    10da:	1f 91       	pop	r17
    10dc:	08 95       	ret

000010de <GLCD_Clear>:
    10de:	80 e0       	ldi	r24, 0x00	; 0
    10e0:	0e 94 58 08 	call	0x10b0	; 0x10b0 <GLCD_FillScreen>
    10e4:	08 95       	ret

000010e6 <GLCD_InvertScreen>:
    10e6:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__GLCD+0x2>
    10ea:	87 3a       	cpi	r24, 0xA7	; 167
    10ec:	21 f4       	brne	.+8      	; 0x10f6 <GLCD_InvertScreen+0x10>
    10ee:	86 ea       	ldi	r24, 0xA6	; 166
    10f0:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__GLCD+0x2>
    10f4:	03 c0       	rjmp	.+6      	; 0x10fc <GLCD_InvertScreen+0x16>
    10f6:	87 ea       	ldi	r24, 0xA7	; 167
    10f8:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__GLCD+0x2>
    10fc:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__GLCD+0x2>
    1100:	0e 94 b2 07 	call	0xf64	; 0xf64 <GLCD_SendCommand>
    1104:	08 95       	ret

00001106 <GLCD_SetFont>:
    1106:	66 23       	and	r22, r22
    1108:	e4 f0       	brlt	.+56     	; 0x1142 <GLCD_SetFont+0x3c>
    110a:	40 34       	cpi	r20, 0x40	; 64
    110c:	d0 f4       	brcc	.+52     	; 0x1142 <GLCD_SetFont+0x3c>
    110e:	22 30       	cpi	r18, 0x02	; 2
    1110:	c0 f4       	brcc	.+48     	; 0x1142 <GLCD_SetFont+0x3c>
    1112:	e6 e7       	ldi	r30, 0x76	; 118
    1114:	f1 e0       	ldi	r31, 0x01	; 1
    1116:	94 83       	std	Z+4, r25	; 0x04
    1118:	83 83       	std	Z+3, r24	; 0x03
    111a:	65 83       	std	Z+5, r22	; 0x05
    111c:	46 83       	std	Z+6, r20	; 0x06
    111e:	50 e0       	ldi	r21, 0x00	; 0
    1120:	41 50       	subi	r20, 0x01	; 1
    1122:	51 09       	sbc	r21, r1
    1124:	ca 01       	movw	r24, r20
    1126:	99 23       	and	r25, r25
    1128:	0c f4       	brge	.+2      	; 0x112c <GLCD_SetFont+0x26>
    112a:	07 96       	adiw	r24, 0x07	; 7
    112c:	95 95       	asr	r25
    112e:	87 95       	ror	r24
    1130:	95 95       	asr	r25
    1132:	87 95       	ror	r24
    1134:	95 95       	asr	r25
    1136:	87 95       	ror	r24
    1138:	e6 e7       	ldi	r30, 0x76	; 118
    113a:	f1 e0       	ldi	r31, 0x01	; 1
    113c:	8f 5f       	subi	r24, 0xFF	; 255
    113e:	87 83       	std	Z+7, r24	; 0x07
    1140:	20 87       	std	Z+8, r18	; 0x08
    1142:	08 95       	ret

00001144 <GLCD_PrintChar>:
    1144:	4f 92       	push	r4
    1146:	5f 92       	push	r5
    1148:	6f 92       	push	r6
    114a:	7f 92       	push	r7
    114c:	8f 92       	push	r8
    114e:	9f 92       	push	r9
    1150:	af 92       	push	r10
    1152:	bf 92       	push	r11
    1154:	cf 92       	push	r12
    1156:	df 92       	push	r13
    1158:	ef 92       	push	r14
    115a:	ff 92       	push	r15
    115c:	0f 93       	push	r16
    115e:	1f 93       	push	r17
    1160:	cf 93       	push	r28
    1162:	df 93       	push	r29
    1164:	a6 e7       	ldi	r26, 0x76	; 118
    1166:	b1 e0       	ldi	r27, 0x01	; 1
    1168:	5c 90       	ld	r5, X
    116a:	11 96       	adiw	r26, 0x01	; 1
    116c:	4c 90       	ld	r4, X
    116e:	11 97       	sbiw	r26, 0x01	; 1
    1170:	80 52       	subi	r24, 0x20	; 32
    1172:	15 96       	adiw	r26, 0x05	; 5
    1174:	9c 91       	ld	r25, X
    1176:	15 97       	sbiw	r26, 0x05	; 5
    1178:	17 96       	adiw	r26, 0x07	; 7
    117a:	2c 91       	ld	r18, X
    117c:	17 97       	sbiw	r26, 0x07	; 7
    117e:	92 9f       	mul	r25, r18
    1180:	90 01       	movw	r18, r0
    1182:	11 24       	eor	r1, r1
    1184:	2f 5f       	subi	r18, 0xFF	; 255
    1186:	3f 4f       	sbci	r19, 0xFF	; 255
    1188:	82 9f       	mul	r24, r18
    118a:	a0 01       	movw	r20, r0
    118c:	83 9f       	mul	r24, r19
    118e:	50 0d       	add	r21, r0
    1190:	11 24       	eor	r1, r1
    1192:	13 96       	adiw	r26, 0x03	; 3
    1194:	ed 91       	ld	r30, X+
    1196:	fc 91       	ld	r31, X
    1198:	14 97       	sbiw	r26, 0x04	; 4
    119a:	5a 01       	movw	r10, r20
    119c:	8f ef       	ldi	r24, 0xFF	; 255
    119e:	a8 1a       	sub	r10, r24
    11a0:	b8 0a       	sbc	r11, r24
    11a2:	e4 0f       	add	r30, r20
    11a4:	f5 1f       	adc	r31, r21
    11a6:	74 90       	lpm	r7, Z
    11a8:	84 2d       	mov	r24, r4
    11aa:	87 70       	andi	r24, 0x07	; 7
    11ac:	98 2e       	mov	r9, r24
    11ae:	64 2c       	mov	r6, r4
    11b0:	81 2c       	mov	r8, r1
    11b2:	5f c0       	rjmp	.+190    	; 0x1272 <GLCD_PrintChar+0x12e>
    11b4:	66 2d       	mov	r22, r6
    11b6:	85 2d       	mov	r24, r5
    11b8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
    11bc:	75 01       	movw	r14, r10
    11be:	e8 0c       	add	r14, r8
    11c0:	f1 1c       	adc	r15, r1
    11c2:	67 01       	movw	r12, r14
    11c4:	81 e0       	ldi	r24, 0x01	; 1
    11c6:	c8 1a       	sub	r12, r24
    11c8:	d1 08       	sbc	r13, r1
    11ca:	10 e0       	ldi	r17, 0x00	; 0
    11cc:	41 c0       	rjmp	.+130    	; 0x1250 <GLCD_PrintChar+0x10c>
    11ce:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <__GLCD+0x3>
    11d2:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <__GLCD+0x4>
    11d6:	fc 01       	movw	r30, r24
    11d8:	ee 0d       	add	r30, r14
    11da:	ff 1d       	adc	r31, r15
    11dc:	24 91       	lpm	r18, Z
    11de:	49 2d       	mov	r20, r9
    11e0:	50 e0       	ldi	r21, 0x00	; 0
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	09 2c       	mov	r0, r9
    11e6:	02 c0       	rjmp	.+4      	; 0x11ec <GLCD_PrintChar+0xa8>
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	0a 94       	dec	r0
    11ee:	e2 f7       	brpl	.-8      	; 0x11e8 <GLCD_PrintChar+0xa4>
    11f0:	02 2f       	mov	r16, r18
    11f2:	88 20       	and	r8, r8
    11f4:	a1 f0       	breq	.+40     	; 0x121e <GLCD_PrintChar+0xda>
    11f6:	fc 01       	movw	r30, r24
    11f8:	ec 0d       	add	r30, r12
    11fa:	fd 1d       	adc	r31, r13
    11fc:	e4 91       	lpm	r30, Z
    11fe:	88 e0       	ldi	r24, 0x08	; 8
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	84 1b       	sub	r24, r20
    1204:	95 0b       	sbc	r25, r21
    1206:	f0 e0       	ldi	r31, 0x00	; 0
    1208:	02 c0       	rjmp	.+4      	; 0x120e <GLCD_PrintChar+0xca>
    120a:	f5 95       	asr	r31
    120c:	e7 95       	ror	r30
    120e:	8a 95       	dec	r24
    1210:	e2 f7       	brpl	.-8      	; 0x120a <GLCD_PrintChar+0xc6>
    1212:	0e 2f       	mov	r16, r30
    1214:	02 2b       	or	r16, r18
    1216:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <__GLCD+0x7>
    121a:	c8 0e       	add	r12, r24
    121c:	d1 1c       	adc	r13, r1
    121e:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__GLCD+0x8>
    1222:	81 30       	cpi	r24, 0x01	; 1
    1224:	39 f4       	brne	.+14     	; 0x1234 <GLCD_PrintChar+0xf0>
    1226:	e6 e7       	ldi	r30, 0x76	; 118
    1228:	f1 e0       	ldi	r31, 0x01	; 1
    122a:	61 81       	ldd	r22, Z+1	; 0x01
    122c:	80 81       	ld	r24, Z
    122e:	0e 94 b0 06 	call	0xd60	; 0xd60 <GLCD_BufferRead>
    1232:	08 2b       	or	r16, r24
    1234:	c6 e7       	ldi	r28, 0x76	; 118
    1236:	d1 e0       	ldi	r29, 0x01	; 1
    1238:	69 81       	ldd	r22, Y+1	; 0x01
    123a:	88 81       	ld	r24, Y
    123c:	91 e0       	ldi	r25, 0x01	; 1
    123e:	98 0f       	add	r25, r24
    1240:	98 83       	st	Y, r25
    1242:	40 2f       	mov	r20, r16
    1244:	0e 94 a2 06 	call	0xd44	; 0xd44 <GLCD_BufferWrite>
    1248:	8f 81       	ldd	r24, Y+7	; 0x07
    124a:	e8 0e       	add	r14, r24
    124c:	f1 1c       	adc	r15, r1
    124e:	1f 5f       	subi	r17, 0xFF	; 255
    1250:	17 15       	cp	r17, r7
    1252:	08 f4       	brcc	.+2      	; 0x1256 <GLCD_PrintChar+0x112>
    1254:	bc cf       	rjmp	.-136    	; 0x11ce <GLCD_PrintChar+0x8a>
    1256:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__GLCD+0x8>
    125a:	81 11       	cpse	r24, r1
    125c:	07 c0       	rjmp	.+14     	; 0x126c <GLCD_PrintChar+0x128>
    125e:	e6 e7       	ldi	r30, 0x76	; 118
    1260:	f1 e0       	ldi	r31, 0x01	; 1
    1262:	40 e0       	ldi	r20, 0x00	; 0
    1264:	61 81       	ldd	r22, Z+1	; 0x01
    1266:	80 81       	ld	r24, Z
    1268:	0e 94 a2 06 	call	0xd44	; 0xd44 <GLCD_BufferWrite>
    126c:	88 e0       	ldi	r24, 0x08	; 8
    126e:	68 0e       	add	r6, r24
    1270:	83 94       	inc	r8
    1272:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <__GLCD+0x7>
    1276:	88 16       	cp	r8, r24
    1278:	08 f4       	brcc	.+2      	; 0x127c <GLCD_PrintChar+0x138>
    127a:	9c cf       	rjmp	.-200    	; 0x11b4 <GLCD_PrintChar+0x70>
    127c:	24 2d       	mov	r18, r4
    127e:	26 95       	lsr	r18
    1280:	26 95       	lsr	r18
    1282:	26 95       	lsr	r18
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__GLCD+0x6>
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	84 0d       	add	r24, r4
    128e:	91 1d       	adc	r25, r1
    1290:	01 97       	sbiw	r24, 0x01	; 1
    1292:	ac 01       	movw	r20, r24
    1294:	12 f4       	brpl	.+4      	; 0x129a <GLCD_PrintChar+0x156>
    1296:	49 5f       	subi	r20, 0xF9	; 249
    1298:	5f 4f       	sbci	r21, 0xFF	; 255
    129a:	55 95       	asr	r21
    129c:	47 95       	ror	r20
    129e:	55 95       	asr	r21
    12a0:	47 95       	ror	r20
    12a2:	55 95       	asr	r21
    12a4:	47 95       	ror	r20
    12a6:	24 17       	cp	r18, r20
    12a8:	35 07       	cpc	r19, r21
    12aa:	09 f4       	brne	.+2      	; 0x12ae <GLCD_PrintChar+0x16a>
    12ac:	45 c0       	rjmp	.+138    	; 0x1338 <GLCD_PrintChar+0x1f4>
    12ae:	8f e3       	ldi	r24, 0x3F	; 63
    12b0:	86 15       	cp	r24, r6
    12b2:	08 f4       	brcc	.+2      	; 0x12b6 <GLCD_PrintChar+0x172>
    12b4:	41 c0       	rjmp	.+130    	; 0x1338 <GLCD_PrintChar+0x1f4>
    12b6:	66 2d       	mov	r22, r6
    12b8:	85 2d       	mov	r24, r5
    12ba:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
    12be:	a8 0c       	add	r10, r8
    12c0:	b1 1c       	adc	r11, r1
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	a8 1a       	sub	r10, r24
    12c6:	b1 08       	sbc	r11, r1
    12c8:	00 e0       	ldi	r16, 0x00	; 0
    12ca:	29 c0       	rjmp	.+82     	; 0x131e <GLCD_PrintChar+0x1da>
    12cc:	c6 e7       	ldi	r28, 0x76	; 118
    12ce:	d1 e0       	ldi	r29, 0x01	; 1
    12d0:	f9 80       	ldd	r15, Y+1	; 0x01
    12d2:	18 81       	ld	r17, Y
    12d4:	6f 2d       	mov	r22, r15
    12d6:	81 2f       	mov	r24, r17
    12d8:	0e 94 b0 06 	call	0xd60	; 0xd60 <GLCD_BufferRead>
    12dc:	eb 81       	ldd	r30, Y+3	; 0x03
    12de:	fc 81       	ldd	r31, Y+4	; 0x04
    12e0:	ea 0d       	add	r30, r10
    12e2:	fb 1d       	adc	r31, r11
    12e4:	44 91       	lpm	r20, Z
    12e6:	28 e0       	ldi	r18, 0x08	; 8
    12e8:	30 e0       	ldi	r19, 0x00	; 0
    12ea:	29 19       	sub	r18, r9
    12ec:	31 09       	sbc	r19, r1
    12ee:	50 e0       	ldi	r21, 0x00	; 0
    12f0:	02 c0       	rjmp	.+4      	; 0x12f6 <GLCD_PrintChar+0x1b2>
    12f2:	55 95       	asr	r21
    12f4:	47 95       	ror	r20
    12f6:	2a 95       	dec	r18
    12f8:	e2 f7       	brpl	.-8      	; 0x12f2 <GLCD_PrintChar+0x1ae>
    12fa:	48 2b       	or	r20, r24
    12fc:	98 85       	ldd	r25, Y+8	; 0x08
    12fe:	91 30       	cpi	r25, 0x01	; 1
    1300:	09 f4       	brne	.+2      	; 0x1304 <GLCD_PrintChar+0x1c0>
    1302:	48 2b       	or	r20, r24
    1304:	c6 e7       	ldi	r28, 0x76	; 118
    1306:	d1 e0       	ldi	r29, 0x01	; 1
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	81 0f       	add	r24, r17
    130c:	88 83       	st	Y, r24
    130e:	6f 2d       	mov	r22, r15
    1310:	81 2f       	mov	r24, r17
    1312:	0e 94 a2 06 	call	0xd44	; 0xd44 <GLCD_BufferWrite>
    1316:	8f 81       	ldd	r24, Y+7	; 0x07
    1318:	a8 0e       	add	r10, r24
    131a:	b1 1c       	adc	r11, r1
    131c:	0f 5f       	subi	r16, 0xFF	; 255
    131e:	07 15       	cp	r16, r7
    1320:	a8 f2       	brcs	.-86     	; 0x12cc <GLCD_PrintChar+0x188>
    1322:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__GLCD+0x8>
    1326:	81 11       	cpse	r24, r1
    1328:	07 c0       	rjmp	.+14     	; 0x1338 <GLCD_PrintChar+0x1f4>
    132a:	e6 e7       	ldi	r30, 0x76	; 118
    132c:	f1 e0       	ldi	r31, 0x01	; 1
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	61 81       	ldd	r22, Z+1	; 0x01
    1332:	80 81       	ld	r24, Z
    1334:	0e 94 a2 06 	call	0xd44	; 0xd44 <GLCD_BufferWrite>
    1338:	85 2d       	mov	r24, r5
    133a:	87 0d       	add	r24, r7
    133c:	64 2d       	mov	r22, r4
    133e:	8f 5f       	subi	r24, 0xFF	; 255
    1340:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <GLCD_GotoXY>
    1344:	df 91       	pop	r29
    1346:	cf 91       	pop	r28
    1348:	1f 91       	pop	r17
    134a:	0f 91       	pop	r16
    134c:	ff 90       	pop	r15
    134e:	ef 90       	pop	r14
    1350:	df 90       	pop	r13
    1352:	cf 90       	pop	r12
    1354:	bf 90       	pop	r11
    1356:	af 90       	pop	r10
    1358:	9f 90       	pop	r9
    135a:	8f 90       	pop	r8
    135c:	7f 90       	pop	r7
    135e:	6f 90       	pop	r6
    1360:	5f 90       	pop	r5
    1362:	4f 90       	pop	r4
    1364:	08 95       	ret

00001366 <GLCD_PrintString>:
    1366:	cf 93       	push	r28
    1368:	df 93       	push	r29
    136a:	ec 01       	movw	r28, r24
    136c:	0d c0       	rjmp	.+26     	; 0x1388 <GLCD_PrintString+0x22>
    136e:	e6 e7       	ldi	r30, 0x76	; 118
    1370:	f1 e0       	ldi	r31, 0x01	; 1
    1372:	90 81       	ld	r25, Z
    1374:	25 81       	ldd	r18, Z+5	; 0x05
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	29 0f       	add	r18, r25
    137a:	31 1d       	adc	r19, r1
    137c:	20 38       	cpi	r18, 0x80	; 128
    137e:	31 05       	cpc	r19, r1
    1380:	34 f4       	brge	.+12     	; 0x138e <GLCD_PrintString+0x28>
    1382:	21 96       	adiw	r28, 0x01	; 1
    1384:	0e 94 a2 08 	call	0x1144	; 0x1144 <GLCD_PrintChar>
    1388:	88 81       	ld	r24, Y
    138a:	81 11       	cpse	r24, r1
    138c:	f0 cf       	rjmp	.-32     	; 0x136e <GLCD_PrintString+0x8>
    138e:	df 91       	pop	r29
    1390:	cf 91       	pop	r28
    1392:	08 95       	ret

00001394 <GLCD_PrintInteger>:

void GLCD_PrintInteger(const int32_t Value)
{
    1394:	0f 93       	push	r16
    1396:	1f 93       	push	r17
    1398:	cf 93       	push	r28
    139a:	df 93       	push	r29
    139c:	cd b7       	in	r28, 0x3d	; 61
    139e:	de b7       	in	r29, 0x3e	; 62
    13a0:	2c 97       	sbiw	r28, 0x0c	; 12
    13a2:	0f b6       	in	r0, 0x3f	; 63
    13a4:	f8 94       	cli
    13a6:	de bf       	out	0x3e, r29	; 62
    13a8:	0f be       	out	0x3f, r0	; 63
    13aa:	cd bf       	out	0x3d, r28	; 61
	if (Value == 0)
    13ac:	61 15       	cp	r22, r1
    13ae:	71 05       	cpc	r23, r1
    13b0:	81 05       	cpc	r24, r1
    13b2:	91 05       	cpc	r25, r1
    13b4:	21 f4       	brne	.+8      	; 0x13be <GLCD_PrintInteger+0x2a>
	{
		GLCD_PrintChar('0');
    13b6:	80 e3       	ldi	r24, 0x30	; 48
    13b8:	0e 94 a2 08 	call	0x1144	; 0x1144 <GLCD_PrintChar>
    13bc:	14 c0       	rjmp	.+40     	; 0x13e6 <GLCD_PrintInteger+0x52>
	}
	else if ((Value > INT32_MIN) && (Value <= INT32_MAX))
    13be:	61 15       	cp	r22, r1
    13c0:	71 05       	cpc	r23, r1
    13c2:	81 05       	cpc	r24, r1
    13c4:	20 e8       	ldi	r18, 0x80	; 128
    13c6:	92 07       	cpc	r25, r18
    13c8:	71 f0       	breq	.+28     	; 0x13e6 <GLCD_PrintInteger+0x52>
	{
		//int32_max_bytes + sign + null = 12 bytes
		char bcd[12] = { '\0' };
    13ca:	8e 01       	movw	r16, r28
    13cc:	0f 5f       	subi	r16, 0xFF	; 255
    13ce:	1f 4f       	sbci	r17, 0xFF	; 255
    13d0:	2c e0       	ldi	r18, 0x0C	; 12
    13d2:	f8 01       	movw	r30, r16
    13d4:	11 92       	st	Z+, r1
    13d6:	2a 95       	dec	r18
    13d8:	e9 f7       	brne	.-6      	; 0x13d4 <GLCD_PrintInteger+0x40>
		
		//Convert integer to array
		Int2bcd(Value, bcd);
    13da:	a8 01       	movw	r20, r16
    13dc:	0e 94 be 06 	call	0xd7c	; 0xd7c <Int2bcd>
		
		//Print from first non-zero digit
		GLCD_PrintString(bcd);
    13e0:	c8 01       	movw	r24, r16
    13e2:	0e 94 b3 09 	call	0x1366	; 0x1366 <GLCD_PrintString>
	}
}
    13e6:	2c 96       	adiw	r28, 0x0c	; 12
    13e8:	0f b6       	in	r0, 0x3f	; 63
    13ea:	f8 94       	cli
    13ec:	de bf       	out	0x3e, r29	; 62
    13ee:	0f be       	out	0x3f, r0	; 63
    13f0:	cd bf       	out	0x3d, r28	; 61
    13f2:	df 91       	pop	r29
    13f4:	cf 91       	pop	r28
    13f6:	1f 91       	pop	r17
    13f8:	0f 91       	pop	r16
    13fa:	08 95       	ret

000013fc <TWI_Setup>:
//----- Functions -------------//
//Setup TWI hardwarw.
void TWI_Setup(void)
{
	//TWI pins as outputs
	PinMode(TWI_SDA, Output);
    13fc:	87 b1       	in	r24, 0x07	; 7
    13fe:	80 61       	ori	r24, 0x10	; 16
    1400:	87 b9       	out	0x07, r24	; 7
	PinMode(TWI_SCL, Output);
    1402:	87 b1       	in	r24, 0x07	; 7
    1404:	80 62       	ori	r24, 0x20	; 32
    1406:	87 b9       	out	0x07, r24	; 7
	//Activate internal pull-up resistors
	DigitalWrite(TWI_SDA, High);
    1408:	88 b1       	in	r24, 0x08	; 8
    140a:	80 61       	ori	r24, 0x10	; 16
    140c:	88 b9       	out	0x08, r24	; 8
	DigitalWrite(TWI_SCL, High);
    140e:	88 b1       	in	r24, 0x08	; 8
    1410:	80 62       	ori	r24, 0x20	; 32
    1412:	88 b9       	out	0x08, r24	; 8

	//Initialize TWI prescaler and bit rate
	TWSR = 0x00;	//Prescaler = 1
    1414:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR = (uint8_t)(((F_CPU / F_SCL) - 16) / 2);
    1418:	88 e4       	ldi	r24, 0x48	; 72
    141a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	//F_SCL = F_CPU / (16 + 2 * TWBR * PRESCALER)
	//TWBR = ((F_CPU / F_SCL) - 16) / (2 * PRESCALER)

	//Enable TWI  module
	TWCR = (1<<TWEN);
    141e:	84 e0       	ldi	r24, 0x04	; 4
    1420:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1424:	08 95       	ret

00001426 <TWI_Status>:
}

//Get TWI status.
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
    1426:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
}
    142a:	88 7f       	andi	r24, 0xF8	; 248
    142c:	08 95       	ret

0000142e <TWI_BeginTransmission>:

//Begin TWI transmission.
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    142e:	84 ea       	ldi	r24, 0xA4	; 164
    1430:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
    1434:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1438:	88 23       	and	r24, r24
    143a:	e4 f7       	brge	.-8      	; 0x1434 <TWI_BeginTransmission+0x6>

	//Return status register
	return (TWI_Status());
    143c:	0e 94 13 0a 	call	0x1426	; 0x1426 <TWI_Status>
}
    1440:	08 95       	ret

00001442 <TWI_EndTransmission>:

//End TWI transmission.
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
    1442:	85 ed       	ldi	r24, 0xD5	; 213
    1444:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
    1448:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    144c:	84 fd       	sbrc	r24, 4
    144e:	fc cf       	rjmp	.-8      	; 0x1448 <TWI_EndTransmission+0x6>
}
    1450:	08 95       	ret

00001452 <TWI_Transmit>:

//Transmit data.
uint8_t TWI_Transmit(const uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
    1452:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
    1456:	84 e8       	ldi	r24, 0x84	; 132
    1458:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
    145c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1460:	88 23       	and	r24, r24
    1462:	e4 f7       	brge	.-8      	; 0x145c <TWI_Transmit+0xa>

	//Return status register
	return (TWI_Status());
    1464:	0e 94 13 0a 	call	0x1426	; 0x1426 <TWI_Status>
}
    1468:	08 95       	ret

0000146a <__subsf3>:
    146a:	50 58       	subi	r21, 0x80	; 128

0000146c <__addsf3>:
    146c:	bb 27       	eor	r27, r27
    146e:	aa 27       	eor	r26, r26
    1470:	0e 94 4d 0a 	call	0x149a	; 0x149a <__addsf3x>
    1474:	0c 94 97 0b 	jmp	0x172e	; 0x172e <__fp_round>
    1478:	0e 94 89 0b 	call	0x1712	; 0x1712 <__fp_pscA>
    147c:	38 f0       	brcs	.+14     	; 0x148c <__addsf3+0x20>
    147e:	0e 94 90 0b 	call	0x1720	; 0x1720 <__fp_pscB>
    1482:	20 f0       	brcs	.+8      	; 0x148c <__addsf3+0x20>
    1484:	39 f4       	brne	.+14     	; 0x1494 <__addsf3+0x28>
    1486:	9f 3f       	cpi	r25, 0xFF	; 255
    1488:	19 f4       	brne	.+6      	; 0x1490 <__addsf3+0x24>
    148a:	26 f4       	brtc	.+8      	; 0x1494 <__addsf3+0x28>
    148c:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__fp_nan>
    1490:	0e f4       	brtc	.+2      	; 0x1494 <__addsf3+0x28>
    1492:	e0 95       	com	r30
    1494:	e7 fb       	bst	r30, 7
    1496:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__fp_inf>

0000149a <__addsf3x>:
    149a:	e9 2f       	mov	r30, r25
    149c:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__fp_split3>
    14a0:	58 f3       	brcs	.-42     	; 0x1478 <__addsf3+0xc>
    14a2:	ba 17       	cp	r27, r26
    14a4:	62 07       	cpc	r22, r18
    14a6:	73 07       	cpc	r23, r19
    14a8:	84 07       	cpc	r24, r20
    14aa:	95 07       	cpc	r25, r21
    14ac:	20 f0       	brcs	.+8      	; 0x14b6 <__addsf3x+0x1c>
    14ae:	79 f4       	brne	.+30     	; 0x14ce <__addsf3x+0x34>
    14b0:	a6 f5       	brtc	.+104    	; 0x151a <__addsf3x+0x80>
    14b2:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <__fp_zero>
    14b6:	0e f4       	brtc	.+2      	; 0x14ba <__addsf3x+0x20>
    14b8:	e0 95       	com	r30
    14ba:	0b 2e       	mov	r0, r27
    14bc:	ba 2f       	mov	r27, r26
    14be:	a0 2d       	mov	r26, r0
    14c0:	0b 01       	movw	r0, r22
    14c2:	b9 01       	movw	r22, r18
    14c4:	90 01       	movw	r18, r0
    14c6:	0c 01       	movw	r0, r24
    14c8:	ca 01       	movw	r24, r20
    14ca:	a0 01       	movw	r20, r0
    14cc:	11 24       	eor	r1, r1
    14ce:	ff 27       	eor	r31, r31
    14d0:	59 1b       	sub	r21, r25
    14d2:	99 f0       	breq	.+38     	; 0x14fa <__addsf3x+0x60>
    14d4:	59 3f       	cpi	r21, 0xF9	; 249
    14d6:	50 f4       	brcc	.+20     	; 0x14ec <__addsf3x+0x52>
    14d8:	50 3e       	cpi	r21, 0xE0	; 224
    14da:	68 f1       	brcs	.+90     	; 0x1536 <__addsf3x+0x9c>
    14dc:	1a 16       	cp	r1, r26
    14de:	f0 40       	sbci	r31, 0x00	; 0
    14e0:	a2 2f       	mov	r26, r18
    14e2:	23 2f       	mov	r18, r19
    14e4:	34 2f       	mov	r19, r20
    14e6:	44 27       	eor	r20, r20
    14e8:	58 5f       	subi	r21, 0xF8	; 248
    14ea:	f3 cf       	rjmp	.-26     	; 0x14d2 <__addsf3x+0x38>
    14ec:	46 95       	lsr	r20
    14ee:	37 95       	ror	r19
    14f0:	27 95       	ror	r18
    14f2:	a7 95       	ror	r26
    14f4:	f0 40       	sbci	r31, 0x00	; 0
    14f6:	53 95       	inc	r21
    14f8:	c9 f7       	brne	.-14     	; 0x14ec <__addsf3x+0x52>
    14fa:	7e f4       	brtc	.+30     	; 0x151a <__addsf3x+0x80>
    14fc:	1f 16       	cp	r1, r31
    14fe:	ba 0b       	sbc	r27, r26
    1500:	62 0b       	sbc	r22, r18
    1502:	73 0b       	sbc	r23, r19
    1504:	84 0b       	sbc	r24, r20
    1506:	ba f0       	brmi	.+46     	; 0x1536 <__addsf3x+0x9c>
    1508:	91 50       	subi	r25, 0x01	; 1
    150a:	a1 f0       	breq	.+40     	; 0x1534 <__addsf3x+0x9a>
    150c:	ff 0f       	add	r31, r31
    150e:	bb 1f       	adc	r27, r27
    1510:	66 1f       	adc	r22, r22
    1512:	77 1f       	adc	r23, r23
    1514:	88 1f       	adc	r24, r24
    1516:	c2 f7       	brpl	.-16     	; 0x1508 <__addsf3x+0x6e>
    1518:	0e c0       	rjmp	.+28     	; 0x1536 <__addsf3x+0x9c>
    151a:	ba 0f       	add	r27, r26
    151c:	62 1f       	adc	r22, r18
    151e:	73 1f       	adc	r23, r19
    1520:	84 1f       	adc	r24, r20
    1522:	48 f4       	brcc	.+18     	; 0x1536 <__addsf3x+0x9c>
    1524:	87 95       	ror	r24
    1526:	77 95       	ror	r23
    1528:	67 95       	ror	r22
    152a:	b7 95       	ror	r27
    152c:	f7 95       	ror	r31
    152e:	9e 3f       	cpi	r25, 0xFE	; 254
    1530:	08 f0       	brcs	.+2      	; 0x1534 <__addsf3x+0x9a>
    1532:	b0 cf       	rjmp	.-160    	; 0x1494 <__addsf3+0x28>
    1534:	93 95       	inc	r25
    1536:	88 0f       	add	r24, r24
    1538:	08 f0       	brcs	.+2      	; 0x153c <__addsf3x+0xa2>
    153a:	99 27       	eor	r25, r25
    153c:	ee 0f       	add	r30, r30
    153e:	97 95       	ror	r25
    1540:	87 95       	ror	r24
    1542:	08 95       	ret

00001544 <__divsf3>:
    1544:	0e 94 b6 0a 	call	0x156c	; 0x156c <__divsf3x>
    1548:	0c 94 97 0b 	jmp	0x172e	; 0x172e <__fp_round>
    154c:	0e 94 90 0b 	call	0x1720	; 0x1720 <__fp_pscB>
    1550:	58 f0       	brcs	.+22     	; 0x1568 <__divsf3+0x24>
    1552:	0e 94 89 0b 	call	0x1712	; 0x1712 <__fp_pscA>
    1556:	40 f0       	brcs	.+16     	; 0x1568 <__divsf3+0x24>
    1558:	29 f4       	brne	.+10     	; 0x1564 <__divsf3+0x20>
    155a:	5f 3f       	cpi	r21, 0xFF	; 255
    155c:	29 f0       	breq	.+10     	; 0x1568 <__divsf3+0x24>
    155e:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__fp_inf>
    1562:	51 11       	cpse	r21, r1
    1564:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_szero>
    1568:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__fp_nan>

0000156c <__divsf3x>:
    156c:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__fp_split3>
    1570:	68 f3       	brcs	.-38     	; 0x154c <__divsf3+0x8>

00001572 <__divsf3_pse>:
    1572:	99 23       	and	r25, r25
    1574:	b1 f3       	breq	.-20     	; 0x1562 <__divsf3+0x1e>
    1576:	55 23       	and	r21, r21
    1578:	91 f3       	breq	.-28     	; 0x155e <__divsf3+0x1a>
    157a:	95 1b       	sub	r25, r21
    157c:	55 0b       	sbc	r21, r21
    157e:	bb 27       	eor	r27, r27
    1580:	aa 27       	eor	r26, r26
    1582:	62 17       	cp	r22, r18
    1584:	73 07       	cpc	r23, r19
    1586:	84 07       	cpc	r24, r20
    1588:	38 f0       	brcs	.+14     	; 0x1598 <__divsf3_pse+0x26>
    158a:	9f 5f       	subi	r25, 0xFF	; 255
    158c:	5f 4f       	sbci	r21, 0xFF	; 255
    158e:	22 0f       	add	r18, r18
    1590:	33 1f       	adc	r19, r19
    1592:	44 1f       	adc	r20, r20
    1594:	aa 1f       	adc	r26, r26
    1596:	a9 f3       	breq	.-22     	; 0x1582 <__divsf3_pse+0x10>
    1598:	35 d0       	rcall	.+106    	; 0x1604 <__divsf3_pse+0x92>
    159a:	0e 2e       	mov	r0, r30
    159c:	3a f0       	brmi	.+14     	; 0x15ac <__divsf3_pse+0x3a>
    159e:	e0 e8       	ldi	r30, 0x80	; 128
    15a0:	32 d0       	rcall	.+100    	; 0x1606 <__divsf3_pse+0x94>
    15a2:	91 50       	subi	r25, 0x01	; 1
    15a4:	50 40       	sbci	r21, 0x00	; 0
    15a6:	e6 95       	lsr	r30
    15a8:	00 1c       	adc	r0, r0
    15aa:	ca f7       	brpl	.-14     	; 0x159e <__divsf3_pse+0x2c>
    15ac:	2b d0       	rcall	.+86     	; 0x1604 <__divsf3_pse+0x92>
    15ae:	fe 2f       	mov	r31, r30
    15b0:	29 d0       	rcall	.+82     	; 0x1604 <__divsf3_pse+0x92>
    15b2:	66 0f       	add	r22, r22
    15b4:	77 1f       	adc	r23, r23
    15b6:	88 1f       	adc	r24, r24
    15b8:	bb 1f       	adc	r27, r27
    15ba:	26 17       	cp	r18, r22
    15bc:	37 07       	cpc	r19, r23
    15be:	48 07       	cpc	r20, r24
    15c0:	ab 07       	cpc	r26, r27
    15c2:	b0 e8       	ldi	r27, 0x80	; 128
    15c4:	09 f0       	breq	.+2      	; 0x15c8 <__divsf3_pse+0x56>
    15c6:	bb 0b       	sbc	r27, r27
    15c8:	80 2d       	mov	r24, r0
    15ca:	bf 01       	movw	r22, r30
    15cc:	ff 27       	eor	r31, r31
    15ce:	93 58       	subi	r25, 0x83	; 131
    15d0:	5f 4f       	sbci	r21, 0xFF	; 255
    15d2:	3a f0       	brmi	.+14     	; 0x15e2 <__divsf3_pse+0x70>
    15d4:	9e 3f       	cpi	r25, 0xFE	; 254
    15d6:	51 05       	cpc	r21, r1
    15d8:	78 f0       	brcs	.+30     	; 0x15f8 <__divsf3_pse+0x86>
    15da:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__fp_inf>
    15de:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_szero>
    15e2:	5f 3f       	cpi	r21, 0xFF	; 255
    15e4:	e4 f3       	brlt	.-8      	; 0x15de <__divsf3_pse+0x6c>
    15e6:	98 3e       	cpi	r25, 0xE8	; 232
    15e8:	d4 f3       	brlt	.-12     	; 0x15de <__divsf3_pse+0x6c>
    15ea:	86 95       	lsr	r24
    15ec:	77 95       	ror	r23
    15ee:	67 95       	ror	r22
    15f0:	b7 95       	ror	r27
    15f2:	f7 95       	ror	r31
    15f4:	9f 5f       	subi	r25, 0xFF	; 255
    15f6:	c9 f7       	brne	.-14     	; 0x15ea <__divsf3_pse+0x78>
    15f8:	88 0f       	add	r24, r24
    15fa:	91 1d       	adc	r25, r1
    15fc:	96 95       	lsr	r25
    15fe:	87 95       	ror	r24
    1600:	97 f9       	bld	r25, 7
    1602:	08 95       	ret
    1604:	e1 e0       	ldi	r30, 0x01	; 1
    1606:	66 0f       	add	r22, r22
    1608:	77 1f       	adc	r23, r23
    160a:	88 1f       	adc	r24, r24
    160c:	bb 1f       	adc	r27, r27
    160e:	62 17       	cp	r22, r18
    1610:	73 07       	cpc	r23, r19
    1612:	84 07       	cpc	r24, r20
    1614:	ba 07       	cpc	r27, r26
    1616:	20 f0       	brcs	.+8      	; 0x1620 <__divsf3_pse+0xae>
    1618:	62 1b       	sub	r22, r18
    161a:	73 0b       	sbc	r23, r19
    161c:	84 0b       	sbc	r24, r20
    161e:	ba 0b       	sbc	r27, r26
    1620:	ee 1f       	adc	r30, r30
    1622:	88 f7       	brcc	.-30     	; 0x1606 <__divsf3_pse+0x94>
    1624:	e0 95       	com	r30
    1626:	08 95       	ret

00001628 <__fixunssfsi>:
    1628:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__fp_splitA>
    162c:	88 f0       	brcs	.+34     	; 0x1650 <__fixunssfsi+0x28>
    162e:	9f 57       	subi	r25, 0x7F	; 127
    1630:	98 f0       	brcs	.+38     	; 0x1658 <__fixunssfsi+0x30>
    1632:	b9 2f       	mov	r27, r25
    1634:	99 27       	eor	r25, r25
    1636:	b7 51       	subi	r27, 0x17	; 23
    1638:	b0 f0       	brcs	.+44     	; 0x1666 <__fixunssfsi+0x3e>
    163a:	e1 f0       	breq	.+56     	; 0x1674 <__fixunssfsi+0x4c>
    163c:	66 0f       	add	r22, r22
    163e:	77 1f       	adc	r23, r23
    1640:	88 1f       	adc	r24, r24
    1642:	99 1f       	adc	r25, r25
    1644:	1a f0       	brmi	.+6      	; 0x164c <__fixunssfsi+0x24>
    1646:	ba 95       	dec	r27
    1648:	c9 f7       	brne	.-14     	; 0x163c <__fixunssfsi+0x14>
    164a:	14 c0       	rjmp	.+40     	; 0x1674 <__fixunssfsi+0x4c>
    164c:	b1 30       	cpi	r27, 0x01	; 1
    164e:	91 f0       	breq	.+36     	; 0x1674 <__fixunssfsi+0x4c>
    1650:	0e 94 ca 0b 	call	0x1794	; 0x1794 <__fp_zero>
    1654:	b1 e0       	ldi	r27, 0x01	; 1
    1656:	08 95       	ret
    1658:	0c 94 ca 0b 	jmp	0x1794	; 0x1794 <__fp_zero>
    165c:	67 2f       	mov	r22, r23
    165e:	78 2f       	mov	r23, r24
    1660:	88 27       	eor	r24, r24
    1662:	b8 5f       	subi	r27, 0xF8	; 248
    1664:	39 f0       	breq	.+14     	; 0x1674 <__fixunssfsi+0x4c>
    1666:	b9 3f       	cpi	r27, 0xF9	; 249
    1668:	cc f3       	brlt	.-14     	; 0x165c <__fixunssfsi+0x34>
    166a:	86 95       	lsr	r24
    166c:	77 95       	ror	r23
    166e:	67 95       	ror	r22
    1670:	b3 95       	inc	r27
    1672:	d9 f7       	brne	.-10     	; 0x166a <__fixunssfsi+0x42>
    1674:	3e f4       	brtc	.+14     	; 0x1684 <__fixunssfsi+0x5c>
    1676:	90 95       	com	r25
    1678:	80 95       	com	r24
    167a:	70 95       	com	r23
    167c:	61 95       	neg	r22
    167e:	7f 4f       	sbci	r23, 0xFF	; 255
    1680:	8f 4f       	sbci	r24, 0xFF	; 255
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	08 95       	ret

00001686 <__floatunsisf>:
    1686:	e8 94       	clt
    1688:	09 c0       	rjmp	.+18     	; 0x169c <__floatsisf+0x12>

0000168a <__floatsisf>:
    168a:	97 fb       	bst	r25, 7
    168c:	3e f4       	brtc	.+14     	; 0x169c <__floatsisf+0x12>
    168e:	90 95       	com	r25
    1690:	80 95       	com	r24
    1692:	70 95       	com	r23
    1694:	61 95       	neg	r22
    1696:	7f 4f       	sbci	r23, 0xFF	; 255
    1698:	8f 4f       	sbci	r24, 0xFF	; 255
    169a:	9f 4f       	sbci	r25, 0xFF	; 255
    169c:	99 23       	and	r25, r25
    169e:	a9 f0       	breq	.+42     	; 0x16ca <__floatsisf+0x40>
    16a0:	f9 2f       	mov	r31, r25
    16a2:	96 e9       	ldi	r25, 0x96	; 150
    16a4:	bb 27       	eor	r27, r27
    16a6:	93 95       	inc	r25
    16a8:	f6 95       	lsr	r31
    16aa:	87 95       	ror	r24
    16ac:	77 95       	ror	r23
    16ae:	67 95       	ror	r22
    16b0:	b7 95       	ror	r27
    16b2:	f1 11       	cpse	r31, r1
    16b4:	f8 cf       	rjmp	.-16     	; 0x16a6 <__floatsisf+0x1c>
    16b6:	fa f4       	brpl	.+62     	; 0x16f6 <__floatsisf+0x6c>
    16b8:	bb 0f       	add	r27, r27
    16ba:	11 f4       	brne	.+4      	; 0x16c0 <__floatsisf+0x36>
    16bc:	60 ff       	sbrs	r22, 0
    16be:	1b c0       	rjmp	.+54     	; 0x16f6 <__floatsisf+0x6c>
    16c0:	6f 5f       	subi	r22, 0xFF	; 255
    16c2:	7f 4f       	sbci	r23, 0xFF	; 255
    16c4:	8f 4f       	sbci	r24, 0xFF	; 255
    16c6:	9f 4f       	sbci	r25, 0xFF	; 255
    16c8:	16 c0       	rjmp	.+44     	; 0x16f6 <__floatsisf+0x6c>
    16ca:	88 23       	and	r24, r24
    16cc:	11 f0       	breq	.+4      	; 0x16d2 <__floatsisf+0x48>
    16ce:	96 e9       	ldi	r25, 0x96	; 150
    16d0:	11 c0       	rjmp	.+34     	; 0x16f4 <__floatsisf+0x6a>
    16d2:	77 23       	and	r23, r23
    16d4:	21 f0       	breq	.+8      	; 0x16de <__floatsisf+0x54>
    16d6:	9e e8       	ldi	r25, 0x8E	; 142
    16d8:	87 2f       	mov	r24, r23
    16da:	76 2f       	mov	r23, r22
    16dc:	05 c0       	rjmp	.+10     	; 0x16e8 <__floatsisf+0x5e>
    16de:	66 23       	and	r22, r22
    16e0:	71 f0       	breq	.+28     	; 0x16fe <__floatsisf+0x74>
    16e2:	96 e8       	ldi	r25, 0x86	; 134
    16e4:	86 2f       	mov	r24, r22
    16e6:	70 e0       	ldi	r23, 0x00	; 0
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	2a f0       	brmi	.+10     	; 0x16f6 <__floatsisf+0x6c>
    16ec:	9a 95       	dec	r25
    16ee:	66 0f       	add	r22, r22
    16f0:	77 1f       	adc	r23, r23
    16f2:	88 1f       	adc	r24, r24
    16f4:	da f7       	brpl	.-10     	; 0x16ec <__floatsisf+0x62>
    16f6:	88 0f       	add	r24, r24
    16f8:	96 95       	lsr	r25
    16fa:	87 95       	ror	r24
    16fc:	97 f9       	bld	r25, 7
    16fe:	08 95       	ret

00001700 <__fp_inf>:
    1700:	97 f9       	bld	r25, 7
    1702:	9f 67       	ori	r25, 0x7F	; 127
    1704:	80 e8       	ldi	r24, 0x80	; 128
    1706:	70 e0       	ldi	r23, 0x00	; 0
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	08 95       	ret

0000170c <__fp_nan>:
    170c:	9f ef       	ldi	r25, 0xFF	; 255
    170e:	80 ec       	ldi	r24, 0xC0	; 192
    1710:	08 95       	ret

00001712 <__fp_pscA>:
    1712:	00 24       	eor	r0, r0
    1714:	0a 94       	dec	r0
    1716:	16 16       	cp	r1, r22
    1718:	17 06       	cpc	r1, r23
    171a:	18 06       	cpc	r1, r24
    171c:	09 06       	cpc	r0, r25
    171e:	08 95       	ret

00001720 <__fp_pscB>:
    1720:	00 24       	eor	r0, r0
    1722:	0a 94       	dec	r0
    1724:	12 16       	cp	r1, r18
    1726:	13 06       	cpc	r1, r19
    1728:	14 06       	cpc	r1, r20
    172a:	05 06       	cpc	r0, r21
    172c:	08 95       	ret

0000172e <__fp_round>:
    172e:	09 2e       	mov	r0, r25
    1730:	03 94       	inc	r0
    1732:	00 0c       	add	r0, r0
    1734:	11 f4       	brne	.+4      	; 0x173a <__fp_round+0xc>
    1736:	88 23       	and	r24, r24
    1738:	52 f0       	brmi	.+20     	; 0x174e <__fp_round+0x20>
    173a:	bb 0f       	add	r27, r27
    173c:	40 f4       	brcc	.+16     	; 0x174e <__fp_round+0x20>
    173e:	bf 2b       	or	r27, r31
    1740:	11 f4       	brne	.+4      	; 0x1746 <__fp_round+0x18>
    1742:	60 ff       	sbrs	r22, 0
    1744:	04 c0       	rjmp	.+8      	; 0x174e <__fp_round+0x20>
    1746:	6f 5f       	subi	r22, 0xFF	; 255
    1748:	7f 4f       	sbci	r23, 0xFF	; 255
    174a:	8f 4f       	sbci	r24, 0xFF	; 255
    174c:	9f 4f       	sbci	r25, 0xFF	; 255
    174e:	08 95       	ret

00001750 <__fp_split3>:
    1750:	57 fd       	sbrc	r21, 7
    1752:	90 58       	subi	r25, 0x80	; 128
    1754:	44 0f       	add	r20, r20
    1756:	55 1f       	adc	r21, r21
    1758:	59 f0       	breq	.+22     	; 0x1770 <__fp_splitA+0x10>
    175a:	5f 3f       	cpi	r21, 0xFF	; 255
    175c:	71 f0       	breq	.+28     	; 0x177a <__fp_splitA+0x1a>
    175e:	47 95       	ror	r20

00001760 <__fp_splitA>:
    1760:	88 0f       	add	r24, r24
    1762:	97 fb       	bst	r25, 7
    1764:	99 1f       	adc	r25, r25
    1766:	61 f0       	breq	.+24     	; 0x1780 <__fp_splitA+0x20>
    1768:	9f 3f       	cpi	r25, 0xFF	; 255
    176a:	79 f0       	breq	.+30     	; 0x178a <__fp_splitA+0x2a>
    176c:	87 95       	ror	r24
    176e:	08 95       	ret
    1770:	12 16       	cp	r1, r18
    1772:	13 06       	cpc	r1, r19
    1774:	14 06       	cpc	r1, r20
    1776:	55 1f       	adc	r21, r21
    1778:	f2 cf       	rjmp	.-28     	; 0x175e <__fp_split3+0xe>
    177a:	46 95       	lsr	r20
    177c:	f1 df       	rcall	.-30     	; 0x1760 <__fp_splitA>
    177e:	08 c0       	rjmp	.+16     	; 0x1790 <__fp_splitA+0x30>
    1780:	16 16       	cp	r1, r22
    1782:	17 06       	cpc	r1, r23
    1784:	18 06       	cpc	r1, r24
    1786:	99 1f       	adc	r25, r25
    1788:	f1 cf       	rjmp	.-30     	; 0x176c <__fp_splitA+0xc>
    178a:	86 95       	lsr	r24
    178c:	71 05       	cpc	r23, r1
    178e:	61 05       	cpc	r22, r1
    1790:	08 94       	sec
    1792:	08 95       	ret

00001794 <__fp_zero>:
    1794:	e8 94       	clt

00001796 <__fp_szero>:
    1796:	bb 27       	eor	r27, r27
    1798:	66 27       	eor	r22, r22
    179a:	77 27       	eor	r23, r23
    179c:	cb 01       	movw	r24, r22
    179e:	97 f9       	bld	r25, 7
    17a0:	08 95       	ret

000017a2 <__mulsf3>:
    17a2:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__mulsf3x>
    17a6:	0c 94 97 0b 	jmp	0x172e	; 0x172e <__fp_round>
    17aa:	0e 94 89 0b 	call	0x1712	; 0x1712 <__fp_pscA>
    17ae:	38 f0       	brcs	.+14     	; 0x17be <__mulsf3+0x1c>
    17b0:	0e 94 90 0b 	call	0x1720	; 0x1720 <__fp_pscB>
    17b4:	20 f0       	brcs	.+8      	; 0x17be <__mulsf3+0x1c>
    17b6:	95 23       	and	r25, r21
    17b8:	11 f0       	breq	.+4      	; 0x17be <__mulsf3+0x1c>
    17ba:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__fp_inf>
    17be:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__fp_nan>
    17c2:	11 24       	eor	r1, r1
    17c4:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_szero>

000017c8 <__mulsf3x>:
    17c8:	0e 94 a8 0b 	call	0x1750	; 0x1750 <__fp_split3>
    17cc:	70 f3       	brcs	.-36     	; 0x17aa <__mulsf3+0x8>

000017ce <__mulsf3_pse>:
    17ce:	95 9f       	mul	r25, r21
    17d0:	c1 f3       	breq	.-16     	; 0x17c2 <__mulsf3+0x20>
    17d2:	95 0f       	add	r25, r21
    17d4:	50 e0       	ldi	r21, 0x00	; 0
    17d6:	55 1f       	adc	r21, r21
    17d8:	62 9f       	mul	r22, r18
    17da:	f0 01       	movw	r30, r0
    17dc:	72 9f       	mul	r23, r18
    17de:	bb 27       	eor	r27, r27
    17e0:	f0 0d       	add	r31, r0
    17e2:	b1 1d       	adc	r27, r1
    17e4:	63 9f       	mul	r22, r19
    17e6:	aa 27       	eor	r26, r26
    17e8:	f0 0d       	add	r31, r0
    17ea:	b1 1d       	adc	r27, r1
    17ec:	aa 1f       	adc	r26, r26
    17ee:	64 9f       	mul	r22, r20
    17f0:	66 27       	eor	r22, r22
    17f2:	b0 0d       	add	r27, r0
    17f4:	a1 1d       	adc	r26, r1
    17f6:	66 1f       	adc	r22, r22
    17f8:	82 9f       	mul	r24, r18
    17fa:	22 27       	eor	r18, r18
    17fc:	b0 0d       	add	r27, r0
    17fe:	a1 1d       	adc	r26, r1
    1800:	62 1f       	adc	r22, r18
    1802:	73 9f       	mul	r23, r19
    1804:	b0 0d       	add	r27, r0
    1806:	a1 1d       	adc	r26, r1
    1808:	62 1f       	adc	r22, r18
    180a:	83 9f       	mul	r24, r19
    180c:	a0 0d       	add	r26, r0
    180e:	61 1d       	adc	r22, r1
    1810:	22 1f       	adc	r18, r18
    1812:	74 9f       	mul	r23, r20
    1814:	33 27       	eor	r19, r19
    1816:	a0 0d       	add	r26, r0
    1818:	61 1d       	adc	r22, r1
    181a:	23 1f       	adc	r18, r19
    181c:	84 9f       	mul	r24, r20
    181e:	60 0d       	add	r22, r0
    1820:	21 1d       	adc	r18, r1
    1822:	82 2f       	mov	r24, r18
    1824:	76 2f       	mov	r23, r22
    1826:	6a 2f       	mov	r22, r26
    1828:	11 24       	eor	r1, r1
    182a:	9f 57       	subi	r25, 0x7F	; 127
    182c:	50 40       	sbci	r21, 0x00	; 0
    182e:	9a f0       	brmi	.+38     	; 0x1856 <__mulsf3_pse+0x88>
    1830:	f1 f0       	breq	.+60     	; 0x186e <__mulsf3_pse+0xa0>
    1832:	88 23       	and	r24, r24
    1834:	4a f0       	brmi	.+18     	; 0x1848 <__mulsf3_pse+0x7a>
    1836:	ee 0f       	add	r30, r30
    1838:	ff 1f       	adc	r31, r31
    183a:	bb 1f       	adc	r27, r27
    183c:	66 1f       	adc	r22, r22
    183e:	77 1f       	adc	r23, r23
    1840:	88 1f       	adc	r24, r24
    1842:	91 50       	subi	r25, 0x01	; 1
    1844:	50 40       	sbci	r21, 0x00	; 0
    1846:	a9 f7       	brne	.-22     	; 0x1832 <__mulsf3_pse+0x64>
    1848:	9e 3f       	cpi	r25, 0xFE	; 254
    184a:	51 05       	cpc	r21, r1
    184c:	80 f0       	brcs	.+32     	; 0x186e <__mulsf3_pse+0xa0>
    184e:	0c 94 80 0b 	jmp	0x1700	; 0x1700 <__fp_inf>
    1852:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_szero>
    1856:	5f 3f       	cpi	r21, 0xFF	; 255
    1858:	e4 f3       	brlt	.-8      	; 0x1852 <__mulsf3_pse+0x84>
    185a:	98 3e       	cpi	r25, 0xE8	; 232
    185c:	d4 f3       	brlt	.-12     	; 0x1852 <__mulsf3_pse+0x84>
    185e:	86 95       	lsr	r24
    1860:	77 95       	ror	r23
    1862:	67 95       	ror	r22
    1864:	b7 95       	ror	r27
    1866:	f7 95       	ror	r31
    1868:	e7 95       	ror	r30
    186a:	9f 5f       	subi	r25, 0xFF	; 255
    186c:	c1 f7       	brne	.-16     	; 0x185e <__mulsf3_pse+0x90>
    186e:	fe 2b       	or	r31, r30
    1870:	88 0f       	add	r24, r24
    1872:	91 1d       	adc	r25, r1
    1874:	96 95       	lsr	r25
    1876:	87 95       	ror	r24
    1878:	97 f9       	bld	r25, 7
    187a:	08 95       	ret

0000187c <__mulsi3>:
    187c:	db 01       	movw	r26, r22
    187e:	8f 93       	push	r24
    1880:	9f 93       	push	r25
    1882:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <__muluhisi3>
    1886:	bf 91       	pop	r27
    1888:	af 91       	pop	r26
    188a:	a2 9f       	mul	r26, r18
    188c:	80 0d       	add	r24, r0
    188e:	91 1d       	adc	r25, r1
    1890:	a3 9f       	mul	r26, r19
    1892:	90 0d       	add	r25, r0
    1894:	b2 9f       	mul	r27, r18
    1896:	90 0d       	add	r25, r0
    1898:	11 24       	eor	r1, r1
    189a:	08 95       	ret

0000189c <__udivmodsi4>:
    189c:	a1 e2       	ldi	r26, 0x21	; 33
    189e:	1a 2e       	mov	r1, r26
    18a0:	aa 1b       	sub	r26, r26
    18a2:	bb 1b       	sub	r27, r27
    18a4:	fd 01       	movw	r30, r26
    18a6:	0d c0       	rjmp	.+26     	; 0x18c2 <__udivmodsi4_ep>

000018a8 <__udivmodsi4_loop>:
    18a8:	aa 1f       	adc	r26, r26
    18aa:	bb 1f       	adc	r27, r27
    18ac:	ee 1f       	adc	r30, r30
    18ae:	ff 1f       	adc	r31, r31
    18b0:	a2 17       	cp	r26, r18
    18b2:	b3 07       	cpc	r27, r19
    18b4:	e4 07       	cpc	r30, r20
    18b6:	f5 07       	cpc	r31, r21
    18b8:	20 f0       	brcs	.+8      	; 0x18c2 <__udivmodsi4_ep>
    18ba:	a2 1b       	sub	r26, r18
    18bc:	b3 0b       	sbc	r27, r19
    18be:	e4 0b       	sbc	r30, r20
    18c0:	f5 0b       	sbc	r31, r21

000018c2 <__udivmodsi4_ep>:
    18c2:	66 1f       	adc	r22, r22
    18c4:	77 1f       	adc	r23, r23
    18c6:	88 1f       	adc	r24, r24
    18c8:	99 1f       	adc	r25, r25
    18ca:	1a 94       	dec	r1
    18cc:	69 f7       	brne	.-38     	; 0x18a8 <__udivmodsi4_loop>
    18ce:	60 95       	com	r22
    18d0:	70 95       	com	r23
    18d2:	80 95       	com	r24
    18d4:	90 95       	com	r25
    18d6:	9b 01       	movw	r18, r22
    18d8:	ac 01       	movw	r20, r24
    18da:	bd 01       	movw	r22, r26
    18dc:	cf 01       	movw	r24, r30
    18de:	08 95       	ret

000018e0 <__umulhisi3>:
    18e0:	a2 9f       	mul	r26, r18
    18e2:	b0 01       	movw	r22, r0
    18e4:	b3 9f       	mul	r27, r19
    18e6:	c0 01       	movw	r24, r0
    18e8:	a3 9f       	mul	r26, r19
    18ea:	70 0d       	add	r23, r0
    18ec:	81 1d       	adc	r24, r1
    18ee:	11 24       	eor	r1, r1
    18f0:	91 1d       	adc	r25, r1
    18f2:	b2 9f       	mul	r27, r18
    18f4:	70 0d       	add	r23, r0
    18f6:	81 1d       	adc	r24, r1
    18f8:	11 24       	eor	r1, r1
    18fa:	91 1d       	adc	r25, r1
    18fc:	08 95       	ret

000018fe <__muluhisi3>:
    18fe:	0e 94 70 0c 	call	0x18e0	; 0x18e0 <__umulhisi3>
    1902:	a5 9f       	mul	r26, r21
    1904:	90 0d       	add	r25, r0
    1906:	b4 9f       	mul	r27, r20
    1908:	90 0d       	add	r25, r0
    190a:	a4 9f       	mul	r26, r20
    190c:	80 0d       	add	r24, r0
    190e:	91 1d       	adc	r25, r1
    1910:	11 24       	eor	r1, r1
    1912:	08 95       	ret

00001914 <eeprom_read_byte>:
    1914:	f9 99       	sbic	0x1f, 1	; 31
    1916:	fe cf       	rjmp	.-4      	; 0x1914 <eeprom_read_byte>
    1918:	92 bd       	out	0x22, r25	; 34
    191a:	81 bd       	out	0x21, r24	; 33
    191c:	f8 9a       	sbi	0x1f, 0	; 31
    191e:	99 27       	eor	r25, r25
    1920:	80 b5       	in	r24, 0x20	; 32
    1922:	08 95       	ret

00001924 <eeprom_read_dword>:
    1924:	a6 e1       	ldi	r26, 0x16	; 22
    1926:	b0 e0       	ldi	r27, 0x00	; 0
    1928:	44 e0       	ldi	r20, 0x04	; 4
    192a:	50 e0       	ldi	r21, 0x00	; 0
    192c:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <eeprom_read_blraw>

00001930 <eeprom_write_byte>:
    1930:	26 2f       	mov	r18, r22

00001932 <eeprom_write_r18>:
    1932:	f9 99       	sbic	0x1f, 1	; 31
    1934:	fe cf       	rjmp	.-4      	; 0x1932 <eeprom_write_r18>
    1936:	1f ba       	out	0x1f, r1	; 31
    1938:	92 bd       	out	0x22, r25	; 34
    193a:	81 bd       	out	0x21, r24	; 33
    193c:	20 bd       	out	0x20, r18	; 32
    193e:	0f b6       	in	r0, 0x3f	; 63
    1940:	f8 94       	cli
    1942:	fa 9a       	sbi	0x1f, 2	; 31
    1944:	f9 9a       	sbi	0x1f, 1	; 31
    1946:	0f be       	out	0x3f, r0	; 63
    1948:	01 96       	adiw	r24, 0x01	; 1
    194a:	08 95       	ret

0000194c <eeprom_write_dword>:
    194c:	24 2f       	mov	r18, r20
    194e:	0e 94 99 0c 	call	0x1932	; 0x1932 <eeprom_write_r18>
    1952:	25 2f       	mov	r18, r21
    1954:	0e 94 99 0c 	call	0x1932	; 0x1932 <eeprom_write_r18>
    1958:	0c 94 ae 0c 	jmp	0x195c	; 0x195c <eeprom_write_word>

0000195c <eeprom_write_word>:
    195c:	0e 94 98 0c 	call	0x1930	; 0x1930 <eeprom_write_byte>
    1960:	27 2f       	mov	r18, r23
    1962:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <eeprom_write_r18>

00001966 <eeprom_read_block>:
    1966:	dc 01       	movw	r26, r24
    1968:	cb 01       	movw	r24, r22

0000196a <eeprom_read_blraw>:
    196a:	fc 01       	movw	r30, r24
    196c:	f9 99       	sbic	0x1f, 1	; 31
    196e:	fe cf       	rjmp	.-4      	; 0x196c <eeprom_read_blraw+0x2>
    1970:	06 c0       	rjmp	.+12     	; 0x197e <eeprom_read_blraw+0x14>
    1972:	f2 bd       	out	0x22, r31	; 34
    1974:	e1 bd       	out	0x21, r30	; 33
    1976:	f8 9a       	sbi	0x1f, 0	; 31
    1978:	31 96       	adiw	r30, 0x01	; 1
    197a:	00 b4       	in	r0, 0x20	; 32
    197c:	0d 92       	st	X+, r0
    197e:	41 50       	subi	r20, 0x01	; 1
    1980:	50 40       	sbci	r21, 0x00	; 0
    1982:	b8 f7       	brcc	.-18     	; 0x1972 <eeprom_read_blraw+0x8>
    1984:	08 95       	ret

00001986 <_exit>:
    1986:	f8 94       	cli

00001988 <__stop_program>:
    1988:	ff cf       	rjmp	.-2      	; 0x1988 <__stop_program>
